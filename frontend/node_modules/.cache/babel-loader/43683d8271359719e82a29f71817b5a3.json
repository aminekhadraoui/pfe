{"ast":null,"code":"// src/use-checkbox.ts\nimport { useFormControlProps } from \"@chakra-ui/form-control\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { callAllHandlers, dataAttr } from \"@chakra-ui/shared-utils\"; // ../../utilities/object-utils/src/omit.ts\n\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n\n  return clone;\n} // src/use-checkbox.ts\n\n\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\";\nimport { trackFocusVisible } from \"@zag-js/focus-visible\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nfunction useCheckbox(props = {}) {\n  const formControlProps = useFormControlProps(props);\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy\n  } = formControlProps;\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = void 0,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props;\n  const htmlProps = omit(rest, [\"isDisabled\", \"isReadOnly\", \"isRequired\", \"isInvalid\", \"id\", \"onBlur\", \"onFocus\", \"aria-describedby\"]);\n  const onChangeProp = useCallbackRef(onChange);\n  const onBlurProp = useCallbackRef(onBlur);\n  const onFocusProp = useCallbackRef(onFocus);\n  const [isFocusVisible, setIsFocusVisible] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [isHovered, setHovered] = useState(false);\n  const [isActive, setActive] = useState(false);\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  const inputRef = useRef(null);\n  const [rootIsLabelElement, setRootIsLabelElement] = useState(true);\n  const [checkedState, setCheckedState] = useState(!!defaultChecked);\n  const isControlled = checkedProp !== void 0;\n  const isChecked = isControlled ? checkedProp : checkedState;\n  const handleChange = useCallback(event => {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(() => {\n    if (isDisabled) {\n      setFocused(false);\n    }\n  }, [isDisabled, setFocused]);\n  useSafeLayoutEffect(() => {\n    const el = inputRef.current;\n    if (!(el == null ? void 0 : el.form)) return;\n\n    el.form.onreset = () => {\n      setCheckedState(!!defaultChecked);\n    };\n  }, []);\n  const trulyDisabled = isDisabled && !isFocusable;\n  const onKeyDown = useCallback(event => {\n    if (event.key === \" \") {\n      setActive(true);\n    }\n  }, [setActive]);\n  const onKeyUp = useCallback(event => {\n    if (event.key === \" \") {\n      setActive(false);\n    }\n  }, [setActive]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return;\n    const notInSync = inputRef.current.checked !== isChecked;\n\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  const getCheckboxProps = useCallback((props2 = {}, forwardedRef = null) => {\n    const onPressDown = event => {\n      if (isFocused) {\n        event.preventDefault();\n      }\n\n      setActive(true);\n    };\n\n    return { ...props2,\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props2.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props2.onMouseUp, () => setActive(false)),\n      onMouseEnter: callAllHandlers(props2.onMouseEnter, () => setHovered(true)),\n      onMouseLeave: callAllHandlers(props2.onMouseLeave, () => setHovered(false))\n    };\n  }, [isActive, isChecked, isDisabled, isFocused, isFocusVisible, isHovered, isIndeterminate, isInvalid, isReadOnly]);\n  const getRootProps = useCallback((props2 = {}, forwardedRef = null) => ({ ...htmlProps,\n    ...props2,\n    ref: mergeRefs(forwardedRef, node => {\n      if (!node) return;\n      setRootIsLabelElement(node.tagName === \"LABEL\");\n    }),\n    onClick: callAllHandlers(props2.onClick, () => {\n      var _a;\n\n      if (!rootIsLabelElement) {\n        (_a = inputRef.current) == null ? void 0 : _a.click();\n        requestAnimationFrame(() => {\n          var _a2;\n\n          (_a2 = inputRef.current) == null ? void 0 : _a2.focus({\n            preventScroll: true\n          });\n        });\n      }\n    }),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  }), [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  const getInputProps = useCallback((props2 = {}, forwardedRef = null) => {\n    return { ...props2,\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name,\n      value,\n      id,\n      tabIndex,\n      onChange: callAllHandlers(props2.onChange, handleChange),\n      onBlur: callAllHandlers(props2.onBlur, onBlurProp, () => setFocused(false)),\n      onFocus: callAllHandlers(props2.onFocus, onFocusProp, () => setFocused(true)),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    };\n  }, [name, value, id, handleChange, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);\n  const getLabelProps = useCallback((props2 = {}, forwardedRef = null) => ({ ...props2,\n    ref: forwardedRef,\n    onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  }), [isChecked, isDisabled, isInvalid]);\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps\n  };\n}\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nexport { useCheckbox };","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/@chakra-ui/checkbox/dist/chunk-HPA3SDH4.mjs"],"names":["useFormControlProps","useSafeLayoutEffect","useUpdateEffect","useCallbackRef","mergeRefs","callAllHandlers","dataAttr","omit","object","keysToOmit","clone","Object","assign","key","visuallyHiddenStyle","trackFocusVisible","useCallback","useEffect","useRef","useState","useCheckbox","props","formControlProps","isDisabled","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","defaultChecked","isChecked","checkedProp","isFocusable","onChange","isIndeterminate","name","value","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","rest","htmlProps","onChangeProp","onBlurProp","onFocusProp","isFocusVisible","setIsFocusVisible","isFocused","setFocused","isHovered","setHovered","isActive","setActive","inputRef","rootIsLabelElement","setRootIsLabelElement","checkedState","setCheckedState","isControlled","handleChange","event","preventDefault","target","checked","current","indeterminate","Boolean","el","form","onreset","trulyDisabled","onKeyDown","onKeyUp","notInSync","getCheckboxProps","props2","forwardedRef","onPressDown","ref","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","getRootProps","node","tagName","onClick","_a","click","requestAnimationFrame","_a2","focus","preventScroll","getInputProps","type","required","disabled","readOnly","style","getLabelProps","stopEvent","state","stopPropagation"],"mappings":"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","sourcesContent":["// src/use-checkbox.ts\nimport { useFormControlProps } from \"@chakra-ui/form-control\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { callAllHandlers, dataAttr } from \"@chakra-ui/shared-utils\";\n\n// ../../utilities/object-utils/src/omit.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/use-checkbox.ts\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\";\nimport { trackFocusVisible } from \"@zag-js/focus-visible\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useCheckbox(props = {}) {\n  const formControlProps = useFormControlProps(props);\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy\n  } = formControlProps;\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = void 0,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props;\n  const htmlProps = omit(rest, [\n    \"isDisabled\",\n    \"isReadOnly\",\n    \"isRequired\",\n    \"isInvalid\",\n    \"id\",\n    \"onBlur\",\n    \"onFocus\",\n    \"aria-describedby\"\n  ]);\n  const onChangeProp = useCallbackRef(onChange);\n  const onBlurProp = useCallbackRef(onBlur);\n  const onFocusProp = useCallbackRef(onFocus);\n  const [isFocusVisible, setIsFocusVisible] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [isHovered, setHovered] = useState(false);\n  const [isActive, setActive] = useState(false);\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  const inputRef = useRef(null);\n  const [rootIsLabelElement, setRootIsLabelElement] = useState(true);\n  const [checkedState, setCheckedState] = useState(!!defaultChecked);\n  const isControlled = checkedProp !== void 0;\n  const isChecked = isControlled ? checkedProp : checkedState;\n  const handleChange = useCallback(\n    (event) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault();\n        return;\n      }\n      if (!isControlled) {\n        if (isChecked) {\n          setCheckedState(event.target.checked);\n        } else {\n          setCheckedState(isIndeterminate ? true : event.target.checked);\n        }\n      }\n      onChangeProp == null ? void 0 : onChangeProp(event);\n    },\n    [\n      isReadOnly,\n      isDisabled,\n      isChecked,\n      isControlled,\n      isIndeterminate,\n      onChangeProp\n    ]\n  );\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(() => {\n    if (isDisabled) {\n      setFocused(false);\n    }\n  }, [isDisabled, setFocused]);\n  useSafeLayoutEffect(() => {\n    const el = inputRef.current;\n    if (!(el == null ? void 0 : el.form))\n      return;\n    el.form.onreset = () => {\n      setCheckedState(!!defaultChecked);\n    };\n  }, []);\n  const trulyDisabled = isDisabled && !isFocusable;\n  const onKeyDown = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(true);\n      }\n    },\n    [setActive]\n  );\n  const onKeyUp = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(false);\n      }\n    },\n    [setActive]\n  );\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current)\n      return;\n    const notInSync = inputRef.current.checked !== isChecked;\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  const getCheckboxProps = useCallback(\n    (props2 = {}, forwardedRef = null) => {\n      const onPressDown = (event) => {\n        if (isFocused) {\n          event.preventDefault();\n        }\n        setActive(true);\n      };\n      return {\n        ...props2,\n        ref: forwardedRef,\n        \"data-active\": dataAttr(isActive),\n        \"data-hover\": dataAttr(isHovered),\n        \"data-checked\": dataAttr(isChecked),\n        \"data-focus\": dataAttr(isFocused),\n        \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n        \"data-indeterminate\": dataAttr(isIndeterminate),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(isInvalid),\n        \"data-readonly\": dataAttr(isReadOnly),\n        \"aria-hidden\": true,\n        onMouseDown: callAllHandlers(props2.onMouseDown, onPressDown),\n        onMouseUp: callAllHandlers(props2.onMouseUp, () => setActive(false)),\n        onMouseEnter: callAllHandlers(\n          props2.onMouseEnter,\n          () => setHovered(true)\n        ),\n        onMouseLeave: callAllHandlers(\n          props2.onMouseLeave,\n          () => setHovered(false)\n        )\n      };\n    },\n    [\n      isActive,\n      isChecked,\n      isDisabled,\n      isFocused,\n      isFocusVisible,\n      isHovered,\n      isIndeterminate,\n      isInvalid,\n      isReadOnly\n    ]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...htmlProps,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: callAllHandlers(props2.onClick, () => {\n        var _a;\n        if (!rootIsLabelElement) {\n          (_a = inputRef.current) == null ? void 0 : _a.click();\n          requestAnimationFrame(() => {\n            var _a2;\n            (_a2 = inputRef.current) == null ? void 0 : _a2.focus({ preventScroll: true });\n          });\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    }),\n    [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]\n  );\n  const getInputProps = useCallback(\n    (props2 = {}, forwardedRef = null) => {\n      return {\n        ...props2,\n        ref: mergeRefs(inputRef, forwardedRef),\n        type: \"checkbox\",\n        name,\n        value,\n        id,\n        tabIndex,\n        onChange: callAllHandlers(props2.onChange, handleChange),\n        onBlur: callAllHandlers(\n          props2.onBlur,\n          onBlurProp,\n          () => setFocused(false)\n        ),\n        onFocus: callAllHandlers(\n          props2.onFocus,\n          onFocusProp,\n          () => setFocused(true)\n        ),\n        onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),\n        required: isRequired,\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n        \"aria-describedby\": ariaDescribedBy,\n        \"aria-disabled\": isDisabled,\n        style: visuallyHiddenStyle\n      };\n    },\n    [\n      name,\n      value,\n      id,\n      handleChange,\n      onBlurProp,\n      onFocusProp,\n      onKeyDown,\n      onKeyUp,\n      isRequired,\n      isChecked,\n      trulyDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      ariaInvalid,\n      isInvalid,\n      ariaDescribedBy,\n      isDisabled,\n      tabIndex\n    ]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    }),\n    [isChecked, isDisabled, isInvalid]\n  );\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps\n  };\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nexport {\n  useCheckbox\n};\n"]},"metadata":{},"sourceType":"module"}