{"ast":null,"code":"function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n  /**\n   * If the variant definition is a function, resolve.\n   */\n  if (typeof definition === \"function\") {\n    definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n  }\n  /**\n   * If the variant definition is a variant label, or\n   * the function returned a variant label, resolve.\n   */\n\n\n  if (typeof definition === \"string\") {\n    definition = props.variants && props.variants[definition];\n  }\n  /**\n   * At this point we've resolved both functions and variant labels,\n   * but the resolved variant label might itself have been a function.\n   * If so, resolve. This can only have returned a valid target object.\n   */\n\n\n  if (typeof definition === \"function\") {\n    definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n  }\n\n  return definition;\n}\n\nexport { resolveVariantFromProps };","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs"],"names":["resolveVariantFromProps","props","definition","custom","currentValues","currentVelocity","undefined","variants"],"mappings":"AAAA,SAASA,uBAAT,CAAiCC,KAAjC,EAAwCC,UAAxC,EAAoDC,MAApD,EAA4DC,aAAa,GAAG,EAA5E,EAAgFC,eAAe,GAAG,EAAlG,EAAsG;AAClG;;;AAGA,MAAI,OAAOH,UAAP,KAAsB,UAA1B,EAAsC;AAClCA,IAAAA,UAAU,GAAGA,UAAU,CAACC,MAAM,KAAKG,SAAX,GAAuBH,MAAvB,GAAgCF,KAAK,CAACE,MAAvC,EAA+CC,aAA/C,EAA8DC,eAA9D,CAAvB;AACH;AACD;;;;;;AAIA,MAAI,OAAOH,UAAP,KAAsB,QAA1B,EAAoC;AAChCA,IAAAA,UAAU,GAAGD,KAAK,CAACM,QAAN,IAAkBN,KAAK,CAACM,QAAN,CAAeL,UAAf,CAA/B;AACH;AACD;;;;;;;AAKA,MAAI,OAAOA,UAAP,KAAsB,UAA1B,EAAsC;AAClCA,IAAAA,UAAU,GAAGA,UAAU,CAACC,MAAM,KAAKG,SAAX,GAAuBH,MAAvB,GAAgCF,KAAK,CAACE,MAAvC,EAA+CC,aAA/C,EAA8DC,eAA9D,CAAvB;AACH;;AACD,SAAOH,UAAP;AACH;;AAED,SAASF,uBAAT","sourcesContent":["function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n"]},"metadata":{},"sourceType":"module"}