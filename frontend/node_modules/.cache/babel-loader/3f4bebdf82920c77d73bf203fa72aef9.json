{"ast":null,"code":"\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\n\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n\n  return to;\n};\n\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod); // src/index.ts\n\n\nvar src_exports = {};\n\n__export(src_exports, {\n  ColorModeContext: () => ColorModeContext,\n  ColorModeProvider: () => ColorModeProvider,\n  ColorModeScript: () => ColorModeScript,\n  DarkMode: () => DarkMode,\n  LightMode: () => LightMode,\n  cookieStorageManager: () => cookieStorageManager,\n  cookieStorageManagerSSR: () => cookieStorageManagerSSR,\n  createCookieStorageManager: () => createCookieStorageManager,\n  createLocalStorageManager: () => createLocalStorageManager,\n  getScriptSrc: () => getScriptSrc,\n  localStorageManager: () => localStorageManager,\n  useColorMode: () => useColorMode,\n  useColorModeValue: () => useColorModeValue\n});\n\nmodule.exports = __toCommonJS(src_exports); // src/color-mode-provider.tsx\n\nvar import_react_use_safe_layout_effect = require(\"@chakra-ui/react-use-safe-layout-effect\");\n\nvar import_react2 = require(\"react\"); // src/color-mode-context.ts\n\n\nvar import_react = require(\"react\");\n\nvar ColorModeContext = (0, import_react.createContext)({});\nColorModeContext.displayName = \"ColorModeContext\";\n\nfunction useColorMode() {\n  const context = (0, import_react.useContext)(ColorModeContext);\n\n  if (context === void 0) {\n    throw new Error(\"useColorMode must be used within a ColorModeProvider\");\n  }\n\n  return context;\n}\n\nfunction useColorModeValue(light, dark) {\n  const {\n    colorMode\n  } = useColorMode();\n  return colorMode === \"dark\" ? dark : light;\n} // src/color-mode.utils.ts\n\n\nvar classNames = {\n  light: \"chakra-ui-light\",\n  dark: \"chakra-ui-dark\"\n};\n\nfunction getColorModeUtils(options = {}) {\n  const {\n    preventTransition = true\n  } = options;\n  const utils = {\n    setDataset: value => {\n      const cleanup = preventTransition ? utils.preventTransition() : void 0;\n      document.documentElement.dataset.theme = value;\n      document.documentElement.style.colorScheme = value;\n      cleanup == null ? void 0 : cleanup();\n    },\n\n    setClassName(dark) {\n      document.body.classList.add(dark ? classNames.dark : classNames.light);\n      document.body.classList.remove(dark ? classNames.light : classNames.dark);\n    },\n\n    query() {\n      return window.matchMedia(\"(prefers-color-scheme: dark)\");\n    },\n\n    getSystemTheme(fallback) {\n      var _a;\n\n      const dark = (_a = utils.query().matches) != null ? _a : fallback === \"dark\";\n      return dark ? \"dark\" : \"light\";\n    },\n\n    addListener(fn) {\n      const mql = utils.query();\n\n      const listener = e => {\n        fn(e.matches ? \"dark\" : \"light\");\n      };\n\n      if (typeof mql.addListener === \"function\") mql.addListener(listener);else mql.addEventListener(\"change\", listener);\n      return () => {\n        if (typeof mql.removeListener === \"function\") mql.removeListener(listener);else mql.removeEventListener(\"change\", listener);\n      };\n    },\n\n    preventTransition() {\n      const css = document.createElement(\"style\");\n      css.appendChild(document.createTextNode(`*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}`));\n      document.head.appendChild(css);\n      return () => {\n        ;\n\n        (() => window.getComputedStyle(document.body))();\n\n        requestAnimationFrame(() => {\n          requestAnimationFrame(() => {\n            document.head.removeChild(css);\n          });\n        });\n      };\n    }\n\n  };\n  return utils;\n} // src/storage-manager.ts\n\n\nvar STORAGE_KEY = \"chakra-ui-color-mode\";\n\nfunction createLocalStorageManager(key) {\n  return {\n    ssr: false,\n    type: \"localStorage\",\n\n    get(init) {\n      if (!(globalThis == null ? void 0 : globalThis.document)) return init;\n      let value;\n\n      try {\n        value = localStorage.getItem(key) || init;\n      } catch (e) {}\n\n      return value || init;\n    },\n\n    set(value) {\n      try {\n        localStorage.setItem(key, value);\n      } catch (e) {}\n    }\n\n  };\n}\n\nvar localStorageManager = createLocalStorageManager(STORAGE_KEY);\n\nfunction parseCookie(cookie, key) {\n  const match = cookie.match(new RegExp(`(^| )${key}=([^;]+)`));\n  return match == null ? void 0 : match[2];\n}\n\nfunction createCookieStorageManager(key, cookie) {\n  return {\n    ssr: !!cookie,\n    type: \"cookie\",\n\n    get(init) {\n      if (cookie) return parseCookie(cookie, key);\n      if (!(globalThis == null ? void 0 : globalThis.document)) return init;\n      return parseCookie(document.cookie, key) || init;\n    },\n\n    set(value) {\n      document.cookie = `${key}=${value}; max-age=31536000; path=/`;\n    }\n\n  };\n}\n\nvar cookieStorageManager = createCookieStorageManager(STORAGE_KEY);\n\nvar cookieStorageManagerSSR = cookie => createCookieStorageManager(STORAGE_KEY, cookie); // src/color-mode-provider.tsx\n\n\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\n\nvar noop = () => {};\n\nfunction getTheme(manager, fallback) {\n  return manager.type === \"cookie\" && manager.ssr ? manager.get(fallback) : fallback;\n}\n\nfunction ColorModeProvider(props) {\n  const {\n    value,\n    children,\n    options: {\n      useSystemColorMode,\n      initialColorMode,\n      disableTransitionOnChange\n    } = {},\n    colorModeManager = localStorageManager\n  } = props;\n  const defaultColorMode = initialColorMode === \"dark\" ? \"dark\" : \"light\";\n  const [colorMode, rawSetColorMode] = (0, import_react2.useState)(() => getTheme(colorModeManager, defaultColorMode));\n  const [resolvedColorMode, setResolvedColorMode] = (0, import_react2.useState)(() => getTheme(colorModeManager));\n  const {\n    getSystemTheme,\n    setClassName,\n    setDataset,\n    addListener\n  } = (0, import_react2.useMemo)(() => getColorModeUtils({\n    preventTransition: disableTransitionOnChange\n  }), [disableTransitionOnChange]);\n  const resolvedValue = initialColorMode === \"system\" && !colorMode ? resolvedColorMode : colorMode;\n  const setColorMode = (0, import_react2.useCallback)(value2 => {\n    const resolved = value2 === \"system\" ? getSystemTheme() : value2;\n    rawSetColorMode(resolved);\n    setClassName(resolved === \"dark\");\n    setDataset(resolved);\n    colorModeManager.set(resolved);\n  }, [colorModeManager, getSystemTheme, setClassName, setDataset]);\n  (0, import_react_use_safe_layout_effect.useSafeLayoutEffect)(() => {\n    if (initialColorMode === \"system\") {\n      setResolvedColorMode(getSystemTheme());\n    }\n  }, []);\n  (0, import_react2.useEffect)(() => {\n    const managerValue = colorModeManager.get();\n\n    if (managerValue) {\n      setColorMode(managerValue);\n      return;\n    }\n\n    if (initialColorMode === \"system\") {\n      setColorMode(\"system\");\n      return;\n    }\n\n    setColorMode(defaultColorMode);\n  }, [colorModeManager, defaultColorMode, initialColorMode, setColorMode]);\n  const toggleColorMode = (0, import_react2.useCallback)(() => {\n    setColorMode(resolvedValue === \"dark\" ? \"light\" : \"dark\");\n  }, [resolvedValue, setColorMode]);\n  (0, import_react2.useEffect)(() => {\n    if (!useSystemColorMode) return;\n    return addListener(setColorMode);\n  }, [useSystemColorMode, addListener, setColorMode]);\n  const context = (0, import_react2.useMemo)(() => ({\n    colorMode: value != null ? value : resolvedValue,\n    toggleColorMode: value ? noop : toggleColorMode,\n    setColorMode: value ? noop : setColorMode,\n    forced: value !== void 0\n  }), [resolvedValue, toggleColorMode, setColorMode, value]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(ColorModeContext.Provider, {\n    value: context,\n    children\n  });\n}\n\nColorModeProvider.displayName = \"ColorModeProvider\";\n\nfunction DarkMode(props) {\n  const context = (0, import_react2.useMemo)(() => ({\n    colorMode: \"dark\",\n    toggleColorMode: noop,\n    setColorMode: noop,\n    forced: true\n  }), []);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(ColorModeContext.Provider, {\n    value: context,\n    ...props\n  });\n}\n\nDarkMode.displayName = \"DarkMode\";\n\nfunction LightMode(props) {\n  const context = (0, import_react2.useMemo)(() => ({\n    colorMode: \"light\",\n    toggleColorMode: noop,\n    setColorMode: noop,\n    forced: true\n  }), []);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(ColorModeContext.Provider, {\n    value: context,\n    ...props\n  });\n}\n\nLightMode.displayName = \"LightMode\"; // src/color-mode-script.tsx\n\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\n\nvar VALID_VALUES = /* @__PURE__ */new Set([\"dark\", \"light\", \"system\"]);\n\nfunction normalize(initialColorMode) {\n  let value = initialColorMode;\n  if (!VALID_VALUES.has(value)) value = \"light\";\n  return value;\n}\n\nfunction getScriptSrc(props = {}) {\n  const {\n    initialColorMode = \"light\",\n    type = \"localStorage\",\n    storageKey: key = \"chakra-ui-color-mode\"\n  } = props;\n  const init = normalize(initialColorMode);\n  const isCookie = type === \"cookie\";\n  const cookieScript = `(function(){try{var a=function(o){var l=\"(prefers-color-scheme: dark)\",v=window.matchMedia(l).matches?\"dark\":\"light\",e=o===\"system\"?v:o,d=document.documentElement,m=document.body,i=\"chakra-ui-light\",n=\"chakra-ui-dark\",s=e===\"dark\";return m.classList.add(s?n:i),m.classList.remove(s?i:n),d.style.colorScheme=e,d.dataset.theme=e,e},u=a,h=\"${init}\",r=\"${key}\",t=document.cookie.match(new RegExp(\"(^| )\".concat(r,\"=([^;]+)\"))),c=t?t[2]:null;c?a(c):document.cookie=\"\".concat(r,\"=\").concat(a(h),\"; max-age=31536000; path=/\")}catch(a){}})();\n  `;\n  const localStorageScript = `(function(){try{var a=function(c){var v=\"(prefers-color-scheme: dark)\",h=window.matchMedia(v).matches?\"dark\":\"light\",r=c===\"system\"?h:c,o=document.documentElement,s=document.body,l=\"chakra-ui-light\",d=\"chakra-ui-dark\",i=r===\"dark\";return s.classList.add(i?d:l),s.classList.remove(i?l:d),o.style.colorScheme=r,o.dataset.theme=r,r},n=a,m=\"${init}\",e=\"${key}\",t=localStorage.getItem(e);t?a(t):localStorage.setItem(e,a(m))}catch(a){}})();\n  `;\n  const fn = isCookie ? cookieScript : localStorageScript;\n  return `!${fn}`.trim();\n}\n\nfunction ColorModeScript(props = {}) {\n  const {\n    nonce\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"script\", {\n    id: \"chakra-script\",\n    nonce,\n    dangerouslySetInnerHTML: {\n      __html: getScriptSrc(props)\n    }\n  });\n} // Annotate the CommonJS export names for ESM import in node:\n\n\n0 && (module.exports = {\n  ColorModeContext,\n  ColorModeProvider,\n  ColorModeScript,\n  DarkMode,\n  LightMode,\n  cookieStorageManager,\n  cookieStorageManagerSSR,\n  createCookieStorageManager,\n  createLocalStorageManager,\n  getScriptSrc,\n  localStorageManager,\n  useColorMode,\n  useColorModeValue\n});","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/@chakra-ui/color-mode/dist/index.js"],"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toCommonJS","mod","value","src_exports","ColorModeContext","ColorModeProvider","ColorModeScript","DarkMode","LightMode","cookieStorageManager","cookieStorageManagerSSR","createCookieStorageManager","createLocalStorageManager","getScriptSrc","localStorageManager","useColorMode","useColorModeValue","module","exports","import_react_use_safe_layout_effect","require","import_react2","import_react","createContext","displayName","context","useContext","Error","light","dark","colorMode","classNames","getColorModeUtils","options","preventTransition","utils","setDataset","cleanup","document","documentElement","dataset","theme","style","colorScheme","setClassName","body","classList","add","remove","query","window","matchMedia","getSystemTheme","fallback","_a","matches","addListener","fn","mql","listener","e","addEventListener","removeListener","removeEventListener","css","createElement","appendChild","createTextNode","head","getComputedStyle","requestAnimationFrame","removeChild","STORAGE_KEY","ssr","type","init","globalThis","localStorage","getItem","set","setItem","parseCookie","cookie","match","RegExp","import_jsx_runtime","noop","getTheme","manager","props","children","useSystemColorMode","initialColorMode","disableTransitionOnChange","colorModeManager","defaultColorMode","rawSetColorMode","useState","resolvedColorMode","setResolvedColorMode","useMemo","resolvedValue","setColorMode","useCallback","value2","resolved","useSafeLayoutEffect","useEffect","managerValue","toggleColorMode","forced","jsx","Provider","import_jsx_runtime2","VALID_VALUES","Set","normalize","has","storageKey","isCookie","cookieScript","localStorageScript","trim","nonce","id","dangerouslySetInnerHTML","__html"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  ColorModeContext: () => ColorModeContext,\n  ColorModeProvider: () => ColorModeProvider,\n  ColorModeScript: () => ColorModeScript,\n  DarkMode: () => DarkMode,\n  LightMode: () => LightMode,\n  cookieStorageManager: () => cookieStorageManager,\n  cookieStorageManagerSSR: () => cookieStorageManagerSSR,\n  createCookieStorageManager: () => createCookieStorageManager,\n  createLocalStorageManager: () => createLocalStorageManager,\n  getScriptSrc: () => getScriptSrc,\n  localStorageManager: () => localStorageManager,\n  useColorMode: () => useColorMode,\n  useColorModeValue: () => useColorModeValue\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/color-mode-provider.tsx\nvar import_react_use_safe_layout_effect = require(\"@chakra-ui/react-use-safe-layout-effect\");\nvar import_react2 = require(\"react\");\n\n// src/color-mode-context.ts\nvar import_react = require(\"react\");\nvar ColorModeContext = (0, import_react.createContext)({});\nColorModeContext.displayName = \"ColorModeContext\";\nfunction useColorMode() {\n  const context = (0, import_react.useContext)(ColorModeContext);\n  if (context === void 0) {\n    throw new Error(\"useColorMode must be used within a ColorModeProvider\");\n  }\n  return context;\n}\nfunction useColorModeValue(light, dark) {\n  const { colorMode } = useColorMode();\n  return colorMode === \"dark\" ? dark : light;\n}\n\n// src/color-mode.utils.ts\nvar classNames = {\n  light: \"chakra-ui-light\",\n  dark: \"chakra-ui-dark\"\n};\nfunction getColorModeUtils(options = {}) {\n  const { preventTransition = true } = options;\n  const utils = {\n    setDataset: (value) => {\n      const cleanup = preventTransition ? utils.preventTransition() : void 0;\n      document.documentElement.dataset.theme = value;\n      document.documentElement.style.colorScheme = value;\n      cleanup == null ? void 0 : cleanup();\n    },\n    setClassName(dark) {\n      document.body.classList.add(dark ? classNames.dark : classNames.light);\n      document.body.classList.remove(dark ? classNames.light : classNames.dark);\n    },\n    query() {\n      return window.matchMedia(\"(prefers-color-scheme: dark)\");\n    },\n    getSystemTheme(fallback) {\n      var _a;\n      const dark = (_a = utils.query().matches) != null ? _a : fallback === \"dark\";\n      return dark ? \"dark\" : \"light\";\n    },\n    addListener(fn) {\n      const mql = utils.query();\n      const listener = (e) => {\n        fn(e.matches ? \"dark\" : \"light\");\n      };\n      if (typeof mql.addListener === \"function\")\n        mql.addListener(listener);\n      else\n        mql.addEventListener(\"change\", listener);\n      return () => {\n        if (typeof mql.removeListener === \"function\")\n          mql.removeListener(listener);\n        else\n          mql.removeEventListener(\"change\", listener);\n      };\n    },\n    preventTransition() {\n      const css = document.createElement(\"style\");\n      css.appendChild(\n        document.createTextNode(\n          `*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}`\n        )\n      );\n      document.head.appendChild(css);\n      return () => {\n        ;\n        (() => window.getComputedStyle(document.body))();\n        requestAnimationFrame(() => {\n          requestAnimationFrame(() => {\n            document.head.removeChild(css);\n          });\n        });\n      };\n    }\n  };\n  return utils;\n}\n\n// src/storage-manager.ts\nvar STORAGE_KEY = \"chakra-ui-color-mode\";\nfunction createLocalStorageManager(key) {\n  return {\n    ssr: false,\n    type: \"localStorage\",\n    get(init) {\n      if (!(globalThis == null ? void 0 : globalThis.document))\n        return init;\n      let value;\n      try {\n        value = localStorage.getItem(key) || init;\n      } catch (e) {\n      }\n      return value || init;\n    },\n    set(value) {\n      try {\n        localStorage.setItem(key, value);\n      } catch (e) {\n      }\n    }\n  };\n}\nvar localStorageManager = createLocalStorageManager(STORAGE_KEY);\nfunction parseCookie(cookie, key) {\n  const match = cookie.match(new RegExp(`(^| )${key}=([^;]+)`));\n  return match == null ? void 0 : match[2];\n}\nfunction createCookieStorageManager(key, cookie) {\n  return {\n    ssr: !!cookie,\n    type: \"cookie\",\n    get(init) {\n      if (cookie)\n        return parseCookie(cookie, key);\n      if (!(globalThis == null ? void 0 : globalThis.document))\n        return init;\n      return parseCookie(document.cookie, key) || init;\n    },\n    set(value) {\n      document.cookie = `${key}=${value}; max-age=31536000; path=/`;\n    }\n  };\n}\nvar cookieStorageManager = createCookieStorageManager(STORAGE_KEY);\nvar cookieStorageManagerSSR = (cookie) => createCookieStorageManager(STORAGE_KEY, cookie);\n\n// src/color-mode-provider.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar noop = () => {\n};\nfunction getTheme(manager, fallback) {\n  return manager.type === \"cookie\" && manager.ssr ? manager.get(fallback) : fallback;\n}\nfunction ColorModeProvider(props) {\n  const {\n    value,\n    children,\n    options: {\n      useSystemColorMode,\n      initialColorMode,\n      disableTransitionOnChange\n    } = {},\n    colorModeManager = localStorageManager\n  } = props;\n  const defaultColorMode = initialColorMode === \"dark\" ? \"dark\" : \"light\";\n  const [colorMode, rawSetColorMode] = (0, import_react2.useState)(\n    () => getTheme(colorModeManager, defaultColorMode)\n  );\n  const [resolvedColorMode, setResolvedColorMode] = (0, import_react2.useState)(\n    () => getTheme(colorModeManager)\n  );\n  const { getSystemTheme, setClassName, setDataset, addListener } = (0, import_react2.useMemo)(\n    () => getColorModeUtils({ preventTransition: disableTransitionOnChange }),\n    [disableTransitionOnChange]\n  );\n  const resolvedValue = initialColorMode === \"system\" && !colorMode ? resolvedColorMode : colorMode;\n  const setColorMode = (0, import_react2.useCallback)(\n    (value2) => {\n      const resolved = value2 === \"system\" ? getSystemTheme() : value2;\n      rawSetColorMode(resolved);\n      setClassName(resolved === \"dark\");\n      setDataset(resolved);\n      colorModeManager.set(resolved);\n    },\n    [colorModeManager, getSystemTheme, setClassName, setDataset]\n  );\n  (0, import_react_use_safe_layout_effect.useSafeLayoutEffect)(() => {\n    if (initialColorMode === \"system\") {\n      setResolvedColorMode(getSystemTheme());\n    }\n  }, []);\n  (0, import_react2.useEffect)(() => {\n    const managerValue = colorModeManager.get();\n    if (managerValue) {\n      setColorMode(managerValue);\n      return;\n    }\n    if (initialColorMode === \"system\") {\n      setColorMode(\"system\");\n      return;\n    }\n    setColorMode(defaultColorMode);\n  }, [colorModeManager, defaultColorMode, initialColorMode, setColorMode]);\n  const toggleColorMode = (0, import_react2.useCallback)(() => {\n    setColorMode(resolvedValue === \"dark\" ? \"light\" : \"dark\");\n  }, [resolvedValue, setColorMode]);\n  (0, import_react2.useEffect)(() => {\n    if (!useSystemColorMode)\n      return;\n    return addListener(setColorMode);\n  }, [useSystemColorMode, addListener, setColorMode]);\n  const context = (0, import_react2.useMemo)(\n    () => ({\n      colorMode: value != null ? value : resolvedValue,\n      toggleColorMode: value ? noop : toggleColorMode,\n      setColorMode: value ? noop : setColorMode,\n      forced: value !== void 0\n    }),\n    [resolvedValue, toggleColorMode, setColorMode, value]\n  );\n  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(ColorModeContext.Provider, { value: context, children });\n}\nColorModeProvider.displayName = \"ColorModeProvider\";\nfunction DarkMode(props) {\n  const context = (0, import_react2.useMemo)(\n    () => ({\n      colorMode: \"dark\",\n      toggleColorMode: noop,\n      setColorMode: noop,\n      forced: true\n    }),\n    []\n  );\n  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(ColorModeContext.Provider, { value: context, ...props });\n}\nDarkMode.displayName = \"DarkMode\";\nfunction LightMode(props) {\n  const context = (0, import_react2.useMemo)(\n    () => ({\n      colorMode: \"light\",\n      toggleColorMode: noop,\n      setColorMode: noop,\n      forced: true\n    }),\n    []\n  );\n  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(ColorModeContext.Provider, { value: context, ...props });\n}\nLightMode.displayName = \"LightMode\";\n\n// src/color-mode-script.tsx\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar VALID_VALUES = /* @__PURE__ */ new Set([\"dark\", \"light\", \"system\"]);\nfunction normalize(initialColorMode) {\n  let value = initialColorMode;\n  if (!VALID_VALUES.has(value))\n    value = \"light\";\n  return value;\n}\nfunction getScriptSrc(props = {}) {\n  const {\n    initialColorMode = \"light\",\n    type = \"localStorage\",\n    storageKey: key = \"chakra-ui-color-mode\"\n  } = props;\n  const init = normalize(initialColorMode);\n  const isCookie = type === \"cookie\";\n  const cookieScript = `(function(){try{var a=function(o){var l=\"(prefers-color-scheme: dark)\",v=window.matchMedia(l).matches?\"dark\":\"light\",e=o===\"system\"?v:o,d=document.documentElement,m=document.body,i=\"chakra-ui-light\",n=\"chakra-ui-dark\",s=e===\"dark\";return m.classList.add(s?n:i),m.classList.remove(s?i:n),d.style.colorScheme=e,d.dataset.theme=e,e},u=a,h=\"${init}\",r=\"${key}\",t=document.cookie.match(new RegExp(\"(^| )\".concat(r,\"=([^;]+)\"))),c=t?t[2]:null;c?a(c):document.cookie=\"\".concat(r,\"=\").concat(a(h),\"; max-age=31536000; path=/\")}catch(a){}})();\n  `;\n  const localStorageScript = `(function(){try{var a=function(c){var v=\"(prefers-color-scheme: dark)\",h=window.matchMedia(v).matches?\"dark\":\"light\",r=c===\"system\"?h:c,o=document.documentElement,s=document.body,l=\"chakra-ui-light\",d=\"chakra-ui-dark\",i=r===\"dark\";return s.classList.add(i?d:l),s.classList.remove(i?l:d),o.style.colorScheme=r,o.dataset.theme=r,r},n=a,m=\"${init}\",e=\"${key}\",t=localStorage.getItem(e);t?a(t):localStorage.setItem(e,a(m))}catch(a){}})();\n  `;\n  const fn = isCookie ? cookieScript : localStorageScript;\n  return `!${fn}`.trim();\n}\nfunction ColorModeScript(props = {}) {\n  const { nonce } = props;\n  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\n    \"script\",\n    {\n      id: \"chakra-script\",\n      nonce,\n      dangerouslySetInnerHTML: { __html: getScriptSrc(props) }\n    }\n  );\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  ColorModeContext,\n  ColorModeProvider,\n  ColorModeScript,\n  DarkMode,\n  LightMode,\n  cookieStorageManager,\n  cookieStorageManagerSSR,\n  createCookieStorageManager,\n  createLocalStorageManager,\n  getScriptSrc,\n  localStorageManager,\n  useColorMode,\n  useColorModeValue\n});\n"]},"metadata":{},"sourceType":"script"}