{"ast":null,"code":"import { useAlertContext, useAlertStyles } from \"./chunk-FZCW3KO4.mjs\"; // src/alert-description.tsx\n\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AlertDescription = forwardRef(function AlertDescription2(props, ref) {\n  const styles = useAlertStyles();\n  const {\n    status\n  } = useAlertContext();\n  const descriptionStyles = {\n    display: \"inline\",\n    ...styles.description\n  };\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    \"data-status\": status,\n    ...props,\n    className: cx(\"chakra-alert__desc\", props.className),\n    __css: descriptionStyles\n  });\n});\nAlertDescription.displayName = \"AlertDescription\";\nexport { AlertDescription };","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/@chakra-ui/alert/dist/chunk-FBQ6TKVQ.mjs"],"names":["useAlertContext","useAlertStyles","cx","chakra","forwardRef","jsx","AlertDescription","AlertDescription2","props","ref","styles","status","descriptionStyles","display","description","div","className","__css","displayName"],"mappings":"AAAA,SACEA,eADF,EAEEC,cAFF,QAGO,sBAHP,C,CAKA;;AACA,SAASC,EAAT,QAAmB,yBAAnB;AACA,SACEC,MADF,EAEEC,UAFF,QAGO,mBAHP;AAIA,SAASC,GAAT,QAAoB,mBAApB;AACA,IAAIC,gBAAgB,GAAGF,UAAU,CAC/B,SAASG,iBAAT,CAA2BC,KAA3B,EAAkCC,GAAlC,EAAuC;AACrC,QAAMC,MAAM,GAAGT,cAAc,EAA7B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAaX,eAAe,EAAlC;AACA,QAAMY,iBAAiB,GAAG;AACxBC,IAAAA,OAAO,EAAE,QADe;AAExB,OAAGH,MAAM,CAACI;AAFc,GAA1B;AAIA,SAAO,eAAgBT,GAAG,CACxBF,MAAM,CAACY,GADiB,EAExB;AACEN,IAAAA,GADF;AAEE,mBAAeE,MAFjB;AAGE,OAAGH,KAHL;AAIEQ,IAAAA,SAAS,EAAEd,EAAE,CAAC,oBAAD,EAAuBM,KAAK,CAACQ,SAA7B,CAJf;AAKEC,IAAAA,KAAK,EAAEL;AALT,GAFwB,CAA1B;AAUD,CAlB8B,CAAjC;AAoBAN,gBAAgB,CAACY,WAAjB,GAA+B,kBAA/B;AAEA,SACEZ,gBADF","sourcesContent":["import {\n  useAlertContext,\n  useAlertStyles\n} from \"./chunk-FZCW3KO4.mjs\";\n\n// src/alert-description.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AlertDescription = forwardRef(\n  function AlertDescription2(props, ref) {\n    const styles = useAlertStyles();\n    const { status } = useAlertContext();\n    const descriptionStyles = {\n      display: \"inline\",\n      ...styles.description\n    };\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        \"data-status\": status,\n        ...props,\n        className: cx(\"chakra-alert__desc\", props.className),\n        __css: descriptionStyles\n      }\n    );\n  }\n);\nAlertDescription.displayName = \"AlertDescription\";\n\nexport {\n  AlertDescription\n};\n"]},"metadata":{},"sourceType":"module"}