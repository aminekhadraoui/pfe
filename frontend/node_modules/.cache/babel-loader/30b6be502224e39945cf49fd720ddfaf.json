{"ast":null,"code":"\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\n\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n\n  return to;\n};\n\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod); // src/index.ts\n\n\nvar src_exports = {};\n\n__export(src_exports, {\n  addDomEvent: () => addDomEvent,\n  addPointerEvent: () => addPointerEvent,\n  getEventPoint: () => getEventPoint,\n  isMouseEvent: () => isMouseEvent,\n  isMultiTouchEvent: () => isMultiTouchEvent,\n  isTouchEvent: () => isTouchEvent\n});\n\nmodule.exports = __toCommonJS(src_exports); // src/add-dom-event.ts\n\nfunction addDomEvent(target, eventName, handler, options) {\n  target.addEventListener(eventName, handler, options);\n  return () => {\n    target.removeEventListener(eventName, handler, options);\n  };\n} // src/assertion.ts\n\n\nfunction isMouseEvent(event) {\n  const win = getEventWindow(event);\n\n  if (typeof win.PointerEvent !== \"undefined\" && event instanceof win.PointerEvent) {\n    return !!(event.pointerType === \"mouse\");\n  }\n\n  return event instanceof win.MouseEvent;\n}\n\nfunction isTouchEvent(event) {\n  const hasTouches = !!event.touches;\n  return hasTouches;\n}\n\nfunction isMultiTouchEvent(event) {\n  return isTouchEvent(event) && event.touches.length > 1;\n}\n\nfunction getEventWindow(event) {\n  var _a;\n\n  return (_a = event.view) != null ? _a : window;\n} // src/get-event-point.ts\n\n\nfunction pointFromTouch(e, type = \"page\") {\n  const point = e.touches[0] || e.changedTouches[0];\n  return {\n    x: point[`${type}X`],\n    y: point[`${type}Y`]\n  };\n}\n\nfunction pointFromMouse(point, type = \"page\") {\n  return {\n    x: point[`${type}X`],\n    y: point[`${type}Y`]\n  };\n}\n\nfunction getEventPoint(event, type = \"page\") {\n  return isTouchEvent(event) ? pointFromTouch(event, type) : pointFromMouse(event, type);\n} // src/add-pointer-event.ts\n\n\nfunction filter(cb) {\n  return event => {\n    const isMouse = isMouseEvent(event);\n\n    if (!isMouse || isMouse && event.button === 0) {\n      cb(event);\n    }\n  };\n}\n\nfunction wrap(cb, filterPrimary = false) {\n  function listener(event) {\n    cb(event, {\n      point: getEventPoint(event)\n    });\n  }\n\n  const fn = filterPrimary ? filter(listener) : listener;\n  return fn;\n}\n\nfunction addPointerEvent(target, type, cb, options) {\n  return addDomEvent(target, type, wrap(cb, type === \"pointerdown\"), options);\n} // Annotate the CommonJS export names for ESM import in node:\n\n\n0 && (module.exports = {\n  addDomEvent,\n  addPointerEvent,\n  getEventPoint,\n  isMouseEvent,\n  isMultiTouchEvent,\n  isTouchEvent\n});","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/@chakra-ui/event-utils/dist/index.js"],"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toCommonJS","mod","value","src_exports","addDomEvent","addPointerEvent","getEventPoint","isMouseEvent","isMultiTouchEvent","isTouchEvent","module","exports","eventName","handler","options","addEventListener","removeEventListener","event","win","getEventWindow","PointerEvent","pointerType","MouseEvent","hasTouches","touches","length","_a","view","window","pointFromTouch","e","type","point","changedTouches","x","y","pointFromMouse","filter","cb","isMouse","button","wrap","filterPrimary","listener","fn"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  addDomEvent: () => addDomEvent,\n  addPointerEvent: () => addPointerEvent,\n  getEventPoint: () => getEventPoint,\n  isMouseEvent: () => isMouseEvent,\n  isMultiTouchEvent: () => isMultiTouchEvent,\n  isTouchEvent: () => isTouchEvent\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/add-dom-event.ts\nfunction addDomEvent(target, eventName, handler, options) {\n  target.addEventListener(eventName, handler, options);\n  return () => {\n    target.removeEventListener(eventName, handler, options);\n  };\n}\n\n// src/assertion.ts\nfunction isMouseEvent(event) {\n  const win = getEventWindow(event);\n  if (typeof win.PointerEvent !== \"undefined\" && event instanceof win.PointerEvent) {\n    return !!(event.pointerType === \"mouse\");\n  }\n  return event instanceof win.MouseEvent;\n}\nfunction isTouchEvent(event) {\n  const hasTouches = !!event.touches;\n  return hasTouches;\n}\nfunction isMultiTouchEvent(event) {\n  return isTouchEvent(event) && event.touches.length > 1;\n}\nfunction getEventWindow(event) {\n  var _a;\n  return (_a = event.view) != null ? _a : window;\n}\n\n// src/get-event-point.ts\nfunction pointFromTouch(e, type = \"page\") {\n  const point = e.touches[0] || e.changedTouches[0];\n  return { x: point[`${type}X`], y: point[`${type}Y`] };\n}\nfunction pointFromMouse(point, type = \"page\") {\n  return {\n    x: point[`${type}X`],\n    y: point[`${type}Y`]\n  };\n}\nfunction getEventPoint(event, type = \"page\") {\n  return isTouchEvent(event) ? pointFromTouch(event, type) : pointFromMouse(event, type);\n}\n\n// src/add-pointer-event.ts\nfunction filter(cb) {\n  return (event) => {\n    const isMouse = isMouseEvent(event);\n    if (!isMouse || isMouse && event.button === 0) {\n      cb(event);\n    }\n  };\n}\nfunction wrap(cb, filterPrimary = false) {\n  function listener(event) {\n    cb(event, { point: getEventPoint(event) });\n  }\n  const fn = filterPrimary ? filter(listener) : listener;\n  return fn;\n}\nfunction addPointerEvent(target, type, cb, options) {\n  return addDomEvent(target, type, wrap(cb, type === \"pointerdown\"), options);\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  addDomEvent,\n  addPointerEvent,\n  getEventPoint,\n  isMouseEvent,\n  isMultiTouchEvent,\n  isTouchEvent\n});\n"]},"metadata":{},"sourceType":"script"}