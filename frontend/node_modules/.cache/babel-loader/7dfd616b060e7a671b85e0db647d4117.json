{"ast":null,"code":"// src/index.ts\nimport { useEffect } from \"react\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\n\nfunction useEventListener(target, event, handler, options) {\n  const listener = useCallbackRef(handler);\n  useEffect(() => {\n    const node = typeof target === \"function\" ? target() : target != null ? target : document;\n    if (!handler || !node) return;\n    node.addEventListener(event, listener, options);\n    return () => {\n      node.removeEventListener(event, listener, options);\n    };\n  }, [event, target, options, listener, handler]);\n  return () => {\n    const node = typeof target === \"function\" ? target() : target != null ? target : document;\n    node == null ? void 0 : node.removeEventListener(event, listener, options);\n  };\n}\n\nexport { useEventListener };","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/@chakra-ui/react-use-event-listener/dist/index.mjs"],"names":["useEffect","useCallbackRef","useEventListener","target","event","handler","options","listener","node","document","addEventListener","removeEventListener"],"mappings":"AAAA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,mCAA/B;;AACA,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,KAAlC,EAAyCC,OAAzC,EAAkDC,OAAlD,EAA2D;AACzD,QAAMC,QAAQ,GAAGN,cAAc,CAACI,OAAD,CAA/B;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,IAAI,GAAG,OAAOL,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,EAArC,GAA0CA,MAAM,IAAI,IAAV,GAAiBA,MAAjB,GAA0BM,QAAjF;AACA,QAAI,CAACJ,OAAD,IAAY,CAACG,IAAjB,EACE;AACFA,IAAAA,IAAI,CAACE,gBAAL,CAAsBN,KAAtB,EAA6BG,QAA7B,EAAuCD,OAAvC;AACA,WAAO,MAAM;AACXE,MAAAA,IAAI,CAACG,mBAAL,CAAyBP,KAAzB,EAAgCG,QAAhC,EAA0CD,OAA1C;AACD,KAFD;AAGD,GARQ,EAQN,CAACF,KAAD,EAAQD,MAAR,EAAgBG,OAAhB,EAAyBC,QAAzB,EAAmCF,OAAnC,CARM,CAAT;AASA,SAAO,MAAM;AACX,UAAMG,IAAI,GAAG,OAAOL,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,EAArC,GAA0CA,MAAM,IAAI,IAAV,GAAiBA,MAAjB,GAA0BM,QAAjF;AACAD,IAAAA,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwBA,IAAI,CAACG,mBAAL,CAAyBP,KAAzB,EAAgCG,QAAhC,EAA0CD,OAA1C,CAAxB;AACD,GAHD;AAID;;AACD,SACEJ,gBADF","sourcesContent":["// src/index.ts\nimport { useEffect } from \"react\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nfunction useEventListener(target, event, handler, options) {\n  const listener = useCallbackRef(handler);\n  useEffect(() => {\n    const node = typeof target === \"function\" ? target() : target != null ? target : document;\n    if (!handler || !node)\n      return;\n    node.addEventListener(event, listener, options);\n    return () => {\n      node.removeEventListener(event, listener, options);\n    };\n  }, [event, target, options, listener, handler]);\n  return () => {\n    const node = typeof target === \"function\" ? target() : target != null ? target : document;\n    node == null ? void 0 : node.removeEventListener(event, listener, options);\n  };\n}\nexport {\n  useEventListener\n};\n"]},"metadata":{},"sourceType":"module"}