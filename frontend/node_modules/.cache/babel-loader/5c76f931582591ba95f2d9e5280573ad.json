{"ast":null,"code":"\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\n\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n\n  return to;\n};\n\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod); // src/index.ts\n\n\nvar src_exports = {};\n\n__export(src_exports, {\n  Skeleton: () => Skeleton,\n  SkeletonCircle: () => SkeletonCircle,\n  SkeletonText: () => SkeletonText\n});\n\nmodule.exports = __toCommonJS(src_exports); // src/skeleton.tsx\n\nvar import_react_use_previous = require(\"@chakra-ui/react-use-previous\");\n\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\n\nvar import_system = require(\"@chakra-ui/system\"); // src/use-is-first-render.ts\n\n\nvar import_react = require(\"react\");\n\nfunction useIsFirstRender() {\n  const isFirstRender = (0, import_react.useRef)(true);\n  (0, import_react.useEffect)(() => {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n} // src/skeleton.tsx\n\n\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\n\nvar StyledSkeleton = (0, import_system.chakra)(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar $startColor = (0, import_system.cssVar)(\"skeleton-start-color\");\nvar $endColor = (0, import_system.cssVar)(\"skeleton-end-color\");\nvar fade = (0, import_system.keyframes)({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar bgFade = (0, import_system.keyframes)({\n  from: {\n    borderColor: $startColor.reference,\n    background: $startColor.reference\n  },\n  to: {\n    borderColor: $endColor.reference,\n    background: $endColor.reference\n  }\n});\nvar Skeleton = (0, import_system.forwardRef)((props, ref) => {\n  const skeletonProps = { ...props,\n    fadeDuration: typeof props.fadeDuration === \"number\" ? props.fadeDuration : 0.4,\n    speed: typeof props.speed === \"number\" ? props.speed : 0.8\n  };\n  const styles = (0, import_system.useStyleConfig)(\"Skeleton\", skeletonProps);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor = \"\",\n    endColor = \"\",\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    fitContent,\n    ...rest\n  } = (0, import_system.omitThemingProps)(skeletonProps);\n  const [startColorVar, endColorVar] = (0, import_system.useToken)(\"colors\", [startColor, endColor]);\n  const wasPreviouslyLoaded = (0, import_react_use_previous.usePrevious)(isLoaded);\n\n  const _className = (0, import_shared_utils.cx)(\"chakra-skeleton\", className);\n\n  const cssVarStyles = { ...(startColorVar && {\n      [$startColor.variable]: startColorVar\n    }),\n    ...(endColorVar && {\n      [$endColor.variable]: endColorVar\n    })\n  };\n\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n      ref,\n      className: _className,\n      __css: {\n        animation\n      },\n      ...rest\n    });\n  }\n\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(StyledSkeleton, {\n    ref,\n    className: _className,\n    ...rest,\n    __css: {\n      width: fitContent ? \"fit-content\" : void 0,\n      ...styles,\n      ...cssVarStyles,\n      _dark: { ...styles[\"_dark\"],\n        ...cssVarStyles\n      },\n      animation: `${speed}s linear infinite alternate ${bgFade}`\n    }\n  });\n});\nSkeleton.displayName = \"Skeleton\"; // src/skeleton-text.tsx\n\nvar import_media_query = require(\"@chakra-ui/media-query\");\n\nvar import_system2 = require(\"@chakra-ui/system\");\n\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\n\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\n\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\n\nvar defaultNoOfLines = 3;\n\nvar SkeletonText = props => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    variant,\n    size,\n    colorScheme,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = (0, import_media_query.useBreakpointValue)(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n\n  const getWidth = index => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n\n    return \"100%\";\n  };\n\n  const _className = (0, import_shared_utils2.cx)(\"chakra-skeleton__group\", className);\n\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.div, {\n    className: _className,\n    ...rest,\n    children: numbers.map((number, index) => {\n      if (isLoaded && index > 0) {\n        return null;\n      }\n\n      const sizeProps = isLoaded ? null : {\n        mb: number === numbers.length ? \"0\" : spacing,\n        width: getWidth(number),\n        height: skeletonHeight\n      };\n      return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(Skeleton, {\n        startColor,\n        endColor,\n        isLoaded,\n        fadeDuration,\n        speed,\n        variant,\n        size,\n        colorScheme,\n        ...sizeProps,\n        children: index === 0 ? children : void 0\n      }, numbers.length.toString() + number);\n    })\n  });\n};\n\nSkeletonText.displayName = \"SkeletonText\"; // src/skeleton-circle.tsx\n\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\n\nvar SkeletonCircle = ({\n  size = \"2rem\",\n  ...rest\n}) => /* @__PURE__ */(0, import_jsx_runtime3.jsx)(Skeleton, {\n  borderRadius: \"full\",\n  boxSize: size,\n  ...rest\n});\n\nSkeletonCircle.displayName = \"SkeletonCircle\"; // Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  Skeleton,\n  SkeletonCircle,\n  SkeletonText\n});","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/@chakra-ui/skeleton/dist/index.js"],"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toCommonJS","mod","value","src_exports","Skeleton","SkeletonCircle","SkeletonText","module","exports","import_react_use_previous","require","import_shared_utils","import_system","import_react","useIsFirstRender","isFirstRender","useRef","useEffect","current","import_jsx_runtime","StyledSkeleton","chakra","baseStyle","boxShadow","backgroundClip","cursor","color","pointerEvents","userSelect","visibility","$startColor","cssVar","$endColor","fade","keyframes","opacity","bgFade","borderColor","reference","background","forwardRef","props","ref","skeletonProps","fadeDuration","speed","styles","useStyleConfig","startColor","endColor","isLoaded","className","fitContent","rest","omitThemingProps","startColorVar","endColorVar","useToken","wasPreviouslyLoaded","usePrevious","_className","cx","cssVarStyles","variable","animation","jsx","div","__css","width","_dark","displayName","import_media_query","import_system2","import_shared_utils2","import_jsx_runtime2","range","count","Array","fill","map","_","index","defaultNoOfLines","noOfLines","spacing","skeletonHeight","variant","size","colorScheme","children","noOfLinesValue","useBreakpointValue","numbers","getWidth","length","number","sizeProps","mb","height","toString","import_jsx_runtime3","borderRadius","boxSize"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Skeleton: () => Skeleton,\n  SkeletonCircle: () => SkeletonCircle,\n  SkeletonText: () => SkeletonText\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/skeleton.tsx\nvar import_react_use_previous = require(\"@chakra-ui/react-use-previous\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_system = require(\"@chakra-ui/system\");\n\n// src/use-is-first-render.ts\nvar import_react = require(\"react\");\nfunction useIsFirstRender() {\n  const isFirstRender = (0, import_react.useRef)(true);\n  (0, import_react.useEffect)(() => {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n}\n\n// src/skeleton.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar StyledSkeleton = (0, import_system.chakra)(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar $startColor = (0, import_system.cssVar)(\"skeleton-start-color\");\nvar $endColor = (0, import_system.cssVar)(\"skeleton-end-color\");\nvar fade = (0, import_system.keyframes)({\n  from: { opacity: 0 },\n  to: { opacity: 1 }\n});\nvar bgFade = (0, import_system.keyframes)({\n  from: {\n    borderColor: $startColor.reference,\n    background: $startColor.reference\n  },\n  to: {\n    borderColor: $endColor.reference,\n    background: $endColor.reference\n  }\n});\nvar Skeleton = (0, import_system.forwardRef)((props, ref) => {\n  const skeletonProps = {\n    ...props,\n    fadeDuration: typeof props.fadeDuration === \"number\" ? props.fadeDuration : 0.4,\n    speed: typeof props.speed === \"number\" ? props.speed : 0.8\n  };\n  const styles = (0, import_system.useStyleConfig)(\"Skeleton\", skeletonProps);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor = \"\",\n    endColor = \"\",\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    fitContent,\n    ...rest\n  } = (0, import_system.omitThemingProps)(skeletonProps);\n  const [startColorVar, endColorVar] = (0, import_system.useToken)(\"colors\", [\n    startColor,\n    endColor\n  ]);\n  const wasPreviouslyLoaded = (0, import_react_use_previous.usePrevious)(isLoaded);\n  const _className = (0, import_shared_utils.cx)(\"chakra-skeleton\", className);\n  const cssVarStyles = {\n    ...startColorVar && { [$startColor.variable]: startColorVar },\n    ...endColorVar && { [$endColor.variable]: endColorVar }\n  };\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(\n      import_system.chakra.div,\n      {\n        ref,\n        className: _className,\n        __css: { animation },\n        ...rest\n      }\n    );\n  }\n  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(\n    StyledSkeleton,\n    {\n      ref,\n      className: _className,\n      ...rest,\n      __css: {\n        width: fitContent ? \"fit-content\" : void 0,\n        ...styles,\n        ...cssVarStyles,\n        _dark: { ...styles[\"_dark\"], ...cssVarStyles },\n        animation: `${speed}s linear infinite alternate ${bgFade}`\n      }\n    }\n  );\n});\nSkeleton.displayName = \"Skeleton\";\n\n// src/skeleton-text.tsx\nvar import_media_query = require(\"@chakra-ui/media-query\");\nvar import_system2 = require(\"@chakra-ui/system\");\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\nvar defaultNoOfLines = 3;\nvar SkeletonText = (props) => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    variant,\n    size,\n    colorScheme,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = (0, import_media_query.useBreakpointValue)(\n    typeof noOfLines === \"number\" ? [noOfLines] : noOfLines\n  ) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n  const getWidth = (index) => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  const _className = (0, import_shared_utils2.cx)(\"chakra-skeleton__group\", className);\n  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_system2.chakra.div, { className: _className, ...rest, children: numbers.map((number, index) => {\n    if (isLoaded && index > 0) {\n      return null;\n    }\n    const sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\n      Skeleton,\n      {\n        startColor,\n        endColor,\n        isLoaded,\n        fadeDuration,\n        speed,\n        variant,\n        size,\n        colorScheme,\n        ...sizeProps,\n        children: index === 0 ? children : void 0\n      },\n      numbers.length.toString() + number\n    );\n  }) });\n};\nSkeletonText.displayName = \"SkeletonText\";\n\n// src/skeleton-circle.tsx\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nvar SkeletonCircle = ({\n  size = \"2rem\",\n  ...rest\n}) => /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(Skeleton, { borderRadius: \"full\", boxSize: size, ...rest });\nSkeletonCircle.displayName = \"SkeletonCircle\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Skeleton,\n  SkeletonCircle,\n  SkeletonText\n});\n"]},"metadata":{},"sourceType":"script"}