{"ast":null,"code":"import { DescendantsManager } from \"./chunk-P6SLLHUK.mjs\";\nimport { cast, useSafeLayoutEffect } from \"./chunk-N7WDF4QK.mjs\"; // src/use-descendant.ts\n\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useRef, useState } from \"react\";\n\nfunction useDescendants() {\n  const descendants = useRef(new DescendantsManager());\n  useSafeLayoutEffect(() => {\n    return () => descendants.current.destroy();\n  });\n  return descendants.current;\n}\n\nvar [DescendantsContextProvider, useDescendantsContext] = createContext({\n  name: \"DescendantsProvider\",\n  errorMessage: \"useDescendantsContext must be used within DescendantsProvider\"\n});\n\nfunction useDescendant(options) {\n  const descendants = useDescendantsContext();\n  const [index, setIndex] = useState(-1);\n  const ref = useRef(null);\n  useSafeLayoutEffect(() => {\n    return () => {\n      if (!ref.current) return;\n      descendants.unregister(ref.current);\n    };\n  }, []);\n  useSafeLayoutEffect(() => {\n    if (!ref.current) return;\n    const dataIndex = Number(ref.current.dataset[\"index\"]);\n\n    if (index != dataIndex && !Number.isNaN(dataIndex)) {\n      setIndex(dataIndex);\n    }\n  });\n  const refCallback = options ? cast(descendants.register(options)) : cast(descendants.register);\n  return {\n    descendants,\n    index,\n    enabledIndex: descendants.enabledIndexOf(ref.current),\n    register: mergeRefs(refCallback, ref)\n  };\n}\n\nfunction createDescendantContext() {\n  const ContextProvider = cast(DescendantsContextProvider);\n\n  const _useDescendantsContext = () => cast(useDescendantsContext());\n\n  const _useDescendant = options => useDescendant(options);\n\n  const _useDescendants = () => useDescendants();\n\n  return [ContextProvider, _useDescendantsContext, _useDescendants, _useDescendant];\n}\n\nexport { createDescendantContext };","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/@chakra-ui/descendant/dist/chunk-D5UZ3RNN.mjs"],"names":["DescendantsManager","cast","useSafeLayoutEffect","createContext","mergeRefs","useRef","useState","useDescendants","descendants","current","destroy","DescendantsContextProvider","useDescendantsContext","name","errorMessage","useDescendant","options","index","setIndex","ref","unregister","dataIndex","Number","dataset","isNaN","refCallback","register","enabledIndex","enabledIndexOf","createDescendantContext","ContextProvider","_useDescendantsContext","_useDescendant","_useDescendants"],"mappings":"AAAA,SACEA,kBADF,QAEO,sBAFP;AAGA,SACEC,IADF,EAEEC,mBAFF,QAGO,sBAHP,C,CAKA;;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,SAAT,QAA0B,iCAA1B;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;AACA,SAASC,cAAT,GAA0B;AACxB,QAAMC,WAAW,GAAGH,MAAM,CAAC,IAAIL,kBAAJ,EAAD,CAA1B;AACAE,EAAAA,mBAAmB,CAAC,MAAM;AACxB,WAAO,MAAMM,WAAW,CAACC,OAAZ,CAAoBC,OAApB,EAAb;AACD,GAFkB,CAAnB;AAGA,SAAOF,WAAW,CAACC,OAAnB;AACD;;AACD,IAAI,CAACE,0BAAD,EAA6BC,qBAA7B,IAAsDT,aAAa,CAAC;AACtEU,EAAAA,IAAI,EAAE,qBADgE;AAEtEC,EAAAA,YAAY,EAAE;AAFwD,CAAD,CAAvE;;AAIA,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,QAAMR,WAAW,GAAGI,qBAAqB,EAAzC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAC,CAAF,CAAlC;AACA,QAAMa,GAAG,GAAGd,MAAM,CAAC,IAAD,CAAlB;AACAH,EAAAA,mBAAmB,CAAC,MAAM;AACxB,WAAO,MAAM;AACX,UAAI,CAACiB,GAAG,CAACV,OAAT,EACE;AACFD,MAAAA,WAAW,CAACY,UAAZ,CAAuBD,GAAG,CAACV,OAA3B;AACD,KAJD;AAKD,GANkB,EAMhB,EANgB,CAAnB;AAOAP,EAAAA,mBAAmB,CAAC,MAAM;AACxB,QAAI,CAACiB,GAAG,CAACV,OAAT,EACE;AACF,UAAMY,SAAS,GAAGC,MAAM,CAACH,GAAG,CAACV,OAAJ,CAAYc,OAAZ,CAAoB,OAApB,CAAD,CAAxB;;AACA,QAAIN,KAAK,IAAII,SAAT,IAAsB,CAACC,MAAM,CAACE,KAAP,CAAaH,SAAb,CAA3B,EAAoD;AAClDH,MAAAA,QAAQ,CAACG,SAAD,CAAR;AACD;AACF,GAPkB,CAAnB;AAQA,QAAMI,WAAW,GAAGT,OAAO,GAAGf,IAAI,CAACO,WAAW,CAACkB,QAAZ,CAAqBV,OAArB,CAAD,CAAP,GAAyCf,IAAI,CAACO,WAAW,CAACkB,QAAb,CAAxE;AACA,SAAO;AACLlB,IAAAA,WADK;AAELS,IAAAA,KAFK;AAGLU,IAAAA,YAAY,EAAEnB,WAAW,CAACoB,cAAZ,CAA2BT,GAAG,CAACV,OAA/B,CAHT;AAILiB,IAAAA,QAAQ,EAAEtB,SAAS,CAACqB,WAAD,EAAcN,GAAd;AAJd,GAAP;AAMD;;AACD,SAASU,uBAAT,GAAmC;AACjC,QAAMC,eAAe,GAAG7B,IAAI,CAACU,0BAAD,CAA5B;;AACA,QAAMoB,sBAAsB,GAAG,MAAM9B,IAAI,CAACW,qBAAqB,EAAtB,CAAzC;;AACA,QAAMoB,cAAc,GAAIhB,OAAD,IAAaD,aAAa,CAACC,OAAD,CAAjD;;AACA,QAAMiB,eAAe,GAAG,MAAM1B,cAAc,EAA5C;;AACA,SAAO,CACLuB,eADK,EAELC,sBAFK,EAGLE,eAHK,EAILD,cAJK,CAAP;AAMD;;AAED,SACEH,uBADF","sourcesContent":["import {\n  DescendantsManager\n} from \"./chunk-P6SLLHUK.mjs\";\nimport {\n  cast,\n  useSafeLayoutEffect\n} from \"./chunk-N7WDF4QK.mjs\";\n\n// src/use-descendant.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useRef, useState } from \"react\";\nfunction useDescendants() {\n  const descendants = useRef(new DescendantsManager());\n  useSafeLayoutEffect(() => {\n    return () => descendants.current.destroy();\n  });\n  return descendants.current;\n}\nvar [DescendantsContextProvider, useDescendantsContext] = createContext({\n  name: \"DescendantsProvider\",\n  errorMessage: \"useDescendantsContext must be used within DescendantsProvider\"\n});\nfunction useDescendant(options) {\n  const descendants = useDescendantsContext();\n  const [index, setIndex] = useState(-1);\n  const ref = useRef(null);\n  useSafeLayoutEffect(() => {\n    return () => {\n      if (!ref.current)\n        return;\n      descendants.unregister(ref.current);\n    };\n  }, []);\n  useSafeLayoutEffect(() => {\n    if (!ref.current)\n      return;\n    const dataIndex = Number(ref.current.dataset[\"index\"]);\n    if (index != dataIndex && !Number.isNaN(dataIndex)) {\n      setIndex(dataIndex);\n    }\n  });\n  const refCallback = options ? cast(descendants.register(options)) : cast(descendants.register);\n  return {\n    descendants,\n    index,\n    enabledIndex: descendants.enabledIndexOf(ref.current),\n    register: mergeRefs(refCallback, ref)\n  };\n}\nfunction createDescendantContext() {\n  const ContextProvider = cast(DescendantsContextProvider);\n  const _useDescendantsContext = () => cast(useDescendantsContext());\n  const _useDescendant = (options) => useDescendant(options);\n  const _useDescendants = () => useDescendants();\n  return [\n    ContextProvider,\n    _useDescendantsContext,\n    _useDescendants,\n    _useDescendant\n  ];\n}\n\nexport {\n  createDescendantContext\n};\n"]},"metadata":{},"sourceType":"module"}