{"ast":null,"code":"// src/use-media-query.ts\nimport { useEnvironment } from \"@chakra-ui/react-env\";\nimport { useEffect, useState } from \"react\";\n\nfunction useMediaQuery(query, options = {}) {\n  const {\n    ssr = true,\n    fallback\n  } = options;\n  const {\n    getWindow\n  } = useEnvironment();\n  const queries = Array.isArray(query) ? query : [query];\n  let fallbackValues = Array.isArray(fallback) ? fallback : [fallback];\n  fallbackValues = fallbackValues.filter(v => v != null);\n  const [value, setValue] = useState(() => {\n    return queries.map((query2, index) => ({\n      media: query2,\n      matches: ssr ? !!fallbackValues[index] : getWindow().matchMedia(query2).matches\n    }));\n  });\n  useEffect(() => {\n    const win = getWindow();\n    setValue(queries.map(query2 => ({\n      media: query2,\n      matches: win.matchMedia(query2).matches\n    })));\n    const mql = queries.map(query2 => win.matchMedia(query2));\n\n    const handler = evt => {\n      setValue(prev => {\n        return prev.slice().map(item => {\n          if (item.media === evt.media) return { ...item,\n            matches: evt.matches\n          };\n          return item;\n        });\n      });\n    };\n\n    mql.forEach(mql2 => {\n      if (typeof mql2.addListener === \"function\") {\n        mql2.addListener(handler);\n      } else {\n        mql2.addEventListener(\"change\", handler);\n      }\n    });\n    return () => {\n      mql.forEach(mql2 => {\n        if (typeof mql2.removeListener === \"function\") {\n          mql2.removeListener(handler);\n        } else {\n          mql2.removeEventListener(\"change\", handler);\n        }\n      });\n    };\n  }, [getWindow]);\n  return value.map(item => item.matches);\n}\n\nexport { useMediaQuery };","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/@chakra-ui/media-query/dist/chunk-MG6WC47T.mjs"],"names":["useEnvironment","useEffect","useState","useMediaQuery","query","options","ssr","fallback","getWindow","queries","Array","isArray","fallbackValues","filter","v","value","setValue","map","query2","index","media","matches","matchMedia","win","mql","handler","evt","prev","slice","item","forEach","mql2","addListener","addEventListener","removeListener","removeEventListener"],"mappings":"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","sourcesContent":["// src/use-media-query.ts\nimport { useEnvironment } from \"@chakra-ui/react-env\";\nimport { useEffect, useState } from \"react\";\nfunction useMediaQuery(query, options = {}) {\n  const { ssr = true, fallback } = options;\n  const { getWindow } = useEnvironment();\n  const queries = Array.isArray(query) ? query : [query];\n  let fallbackValues = Array.isArray(fallback) ? fallback : [fallback];\n  fallbackValues = fallbackValues.filter((v) => v != null);\n  const [value, setValue] = useState(() => {\n    return queries.map((query2, index) => ({\n      media: query2,\n      matches: ssr ? !!fallbackValues[index] : getWindow().matchMedia(query2).matches\n    }));\n  });\n  useEffect(() => {\n    const win = getWindow();\n    setValue(\n      queries.map((query2) => ({\n        media: query2,\n        matches: win.matchMedia(query2).matches\n      }))\n    );\n    const mql = queries.map((query2) => win.matchMedia(query2));\n    const handler = (evt) => {\n      setValue((prev) => {\n        return prev.slice().map((item) => {\n          if (item.media === evt.media)\n            return { ...item, matches: evt.matches };\n          return item;\n        });\n      });\n    };\n    mql.forEach((mql2) => {\n      if (typeof mql2.addListener === \"function\") {\n        mql2.addListener(handler);\n      } else {\n        mql2.addEventListener(\"change\", handler);\n      }\n    });\n    return () => {\n      mql.forEach((mql2) => {\n        if (typeof mql2.removeListener === \"function\") {\n          mql2.removeListener(handler);\n        } else {\n          mql2.removeEventListener(\"change\", handler);\n        }\n      });\n    };\n  }, [getWindow]);\n  return value.map((item) => item.matches);\n}\n\nexport {\n  useMediaQuery\n};\n"]},"metadata":{},"sourceType":"module"}