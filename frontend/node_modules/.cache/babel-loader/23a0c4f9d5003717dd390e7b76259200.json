{"ast":null,"code":"// src/chakra-provider.tsx\nimport { ChakraProvider as BaseChakraProvider } from \"@chakra-ui/provider\";\nimport { theme as defaultTheme, baseTheme } from \"@chakra-ui/theme\";\nimport { ToastProvider, ToastOptionProvider } from \"@chakra-ui/toast\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\n\nvar createChakraProvider = providerTheme => {\n  return function ChakraProvider2({\n    children,\n    theme = providerTheme,\n    toastOptions,\n    ...restProps\n  }) {\n    return /* @__PURE__ */jsxs(BaseChakraProvider, {\n      theme,\n      ...restProps,\n      children: [/* @__PURE__ */jsx(ToastOptionProvider, {\n        value: toastOptions == null ? void 0 : toastOptions.defaultOptions,\n        children\n      }), /* @__PURE__ */jsx(ToastProvider, { ...toastOptions\n      })]\n    });\n  };\n};\n\nvar ChakraProvider = createChakraProvider(defaultTheme);\nvar ChakraBaseProvider = createChakraProvider(baseTheme);\nexport { ChakraProvider, ChakraBaseProvider };","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/@chakra-ui/react/dist/chunk-DGNA6VRZ.mjs"],"names":["ChakraProvider","BaseChakraProvider","theme","defaultTheme","baseTheme","ToastProvider","ToastOptionProvider","jsx","jsxs","createChakraProvider","providerTheme","ChakraProvider2","children","toastOptions","restProps","value","defaultOptions","ChakraBaseProvider"],"mappings":"AAAA;AACA,SACEA,cAAc,IAAIC,kBADpB,QAEO,qBAFP;AAGA,SAASC,KAAK,IAAIC,YAAlB,EAAgCC,SAAhC,QAAiD,kBAAjD;AACA,SACEC,aADF,EAEEC,mBAFF,QAGO,kBAHP;AAIA,SAASC,GAAT,EAAcC,IAAd,QAA0B,mBAA1B;;AACA,IAAIC,oBAAoB,GAAIC,aAAD,IAAmB;AAC5C,SAAO,SAASC,eAAT,CAAyB;AAC9BC,IAAAA,QAD8B;AAE9BV,IAAAA,KAAK,GAAGQ,aAFsB;AAG9BG,IAAAA,YAH8B;AAI9B,OAAGC;AAJ2B,GAAzB,EAKJ;AACD,WAAO,eAAgBN,IAAI,CAACP,kBAAD,EAAqB;AAAEC,MAAAA,KAAF;AAAS,SAAGY,SAAZ;AAAuBF,MAAAA,QAAQ,EAAE,CAC/E,eAAgBL,GAAG,CAACD,mBAAD,EAAsB;AAAES,QAAAA,KAAK,EAAEF,YAAY,IAAI,IAAhB,GAAuB,KAAK,CAA5B,GAAgCA,YAAY,CAACG,cAAtD;AAAsEJ,QAAAA;AAAtE,OAAtB,CAD4D,EAE/E,eAAgBL,GAAG,CAACF,aAAD,EAAgB,EAAE,GAAGQ;AAAL,OAAhB,CAF4D;AAAjC,KAArB,CAA3B;AAID,GAVD;AAWD,CAZD;;AAaA,IAAIb,cAAc,GAAGS,oBAAoB,CAACN,YAAD,CAAzC;AACA,IAAIc,kBAAkB,GAAGR,oBAAoB,CAACL,SAAD,CAA7C;AAEA,SACEJ,cADF,EAEEiB,kBAFF","sourcesContent":["// src/chakra-provider.tsx\nimport {\n  ChakraProvider as BaseChakraProvider\n} from \"@chakra-ui/provider\";\nimport { theme as defaultTheme, baseTheme } from \"@chakra-ui/theme\";\nimport {\n  ToastProvider,\n  ToastOptionProvider\n} from \"@chakra-ui/toast\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar createChakraProvider = (providerTheme) => {\n  return function ChakraProvider2({\n    children,\n    theme = providerTheme,\n    toastOptions,\n    ...restProps\n  }) {\n    return /* @__PURE__ */ jsxs(BaseChakraProvider, { theme, ...restProps, children: [\n      /* @__PURE__ */ jsx(ToastOptionProvider, { value: toastOptions == null ? void 0 : toastOptions.defaultOptions, children }),\n      /* @__PURE__ */ jsx(ToastProvider, { ...toastOptions })\n    ] });\n  };\n};\nvar ChakraProvider = createChakraProvider(defaultTheme);\nvar ChakraBaseProvider = createChakraProvider(baseTheme);\n\nexport {\n  ChakraProvider,\n  ChakraBaseProvider\n};\n"]},"metadata":{},"sourceType":"module"}