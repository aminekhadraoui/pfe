{"ast":null,"code":"// src/use-event-listeners.ts\nimport { useCallback, useEffect, useRef } from \"react\";\n\nfunction useEventListeners() {\n  const listeners = useRef( /* @__PURE__ */new Map());\n  const currentListeners = listeners.current;\n  const add = useCallback((el, type, listener, options) => {\n    listeners.current.set(listener, {\n      type,\n      el,\n      options\n    });\n    el.addEventListener(type, listener, options);\n  }, []);\n  const remove = useCallback((el, type, listener, options) => {\n    el.removeEventListener(type, listener, options);\n    listeners.current.delete(listener);\n  }, []);\n  useEffect(() => () => {\n    currentListeners.forEach((value, key) => {\n      remove(value.el, value.type, key, value.options);\n    });\n  }, [remove, currentListeners]);\n  return {\n    add,\n    remove\n  };\n}\n\nexport { useEventListeners };","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/@chakra-ui/clickable/dist/chunk-YGQKU5RK.mjs"],"names":["useCallback","useEffect","useRef","useEventListeners","listeners","Map","currentListeners","current","add","el","type","listener","options","set","addEventListener","remove","removeEventListener","delete","forEach","value","key"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,MAAjC,QAA+C,OAA/C;;AACA,SAASC,iBAAT,GAA6B;AAC3B,QAAMC,SAAS,GAAGF,MAAM,EAAC,eAAgB,IAAIG,GAAJ,EAAjB,CAAxB;AACA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,OAAnC;AACA,QAAMC,GAAG,GAAGR,WAAW,CAAC,CAACS,EAAD,EAAKC,IAAL,EAAWC,QAAX,EAAqBC,OAArB,KAAiC;AACvDR,IAAAA,SAAS,CAACG,OAAV,CAAkBM,GAAlB,CAAsBF,QAAtB,EAAgC;AAAED,MAAAA,IAAF;AAAQD,MAAAA,EAAR;AAAYG,MAAAA;AAAZ,KAAhC;AACAH,IAAAA,EAAE,CAACK,gBAAH,CAAoBJ,IAApB,EAA0BC,QAA1B,EAAoCC,OAApC;AACD,GAHsB,EAGpB,EAHoB,CAAvB;AAIA,QAAMG,MAAM,GAAGf,WAAW,CACxB,CAACS,EAAD,EAAKC,IAAL,EAAWC,QAAX,EAAqBC,OAArB,KAAiC;AAC/BH,IAAAA,EAAE,CAACO,mBAAH,CAAuBN,IAAvB,EAA6BC,QAA7B,EAAuCC,OAAvC;AACAR,IAAAA,SAAS,CAACG,OAAV,CAAkBU,MAAlB,CAAyBN,QAAzB;AACD,GAJuB,EAKxB,EALwB,CAA1B;AAOAV,EAAAA,SAAS,CACP,MAAM,MAAM;AACVK,IAAAA,gBAAgB,CAACY,OAAjB,CAAyB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACvCL,MAAAA,MAAM,CAACI,KAAK,CAACV,EAAP,EAAWU,KAAK,CAACT,IAAjB,EAAuBU,GAAvB,EAA4BD,KAAK,CAACP,OAAlC,CAAN;AACD,KAFD;AAGD,GALM,EAMP,CAACG,MAAD,EAAST,gBAAT,CANO,CAAT;AAQA,SAAO;AAAEE,IAAAA,GAAF;AAAOO,IAAAA;AAAP,GAAP;AACD;;AAED,SACEZ,iBADF","sourcesContent":["// src/use-event-listeners.ts\nimport { useCallback, useEffect, useRef } from \"react\";\nfunction useEventListeners() {\n  const listeners = useRef(/* @__PURE__ */ new Map());\n  const currentListeners = listeners.current;\n  const add = useCallback((el, type, listener, options) => {\n    listeners.current.set(listener, { type, el, options });\n    el.addEventListener(type, listener, options);\n  }, []);\n  const remove = useCallback(\n    (el, type, listener, options) => {\n      el.removeEventListener(type, listener, options);\n      listeners.current.delete(listener);\n    },\n    []\n  );\n  useEffect(\n    () => () => {\n      currentListeners.forEach((value, key) => {\n        remove(value.el, value.type, key, value.options);\n      });\n    },\n    [remove, currentListeners]\n  );\n  return { add, remove };\n}\n\nexport {\n  useEventListeners\n};\n"]},"metadata":{},"sourceType":"module"}