{"ast":null,"code":"\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\n\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n\n  return to;\n};\n\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod); // src/index.ts\n\n\nvar src_exports = {};\n\n__export(src_exports, {\n  clampValue: () => clampValue,\n  countDecimalPlaces: () => countDecimalPlaces,\n  percentToValue: () => percentToValue,\n  roundValueToStep: () => roundValueToStep,\n  toPrecision: () => toPrecision,\n  valueToPercent: () => valueToPercent\n});\n\nmodule.exports = __toCommonJS(src_exports);\n\nfunction toNumber(value) {\n  const num = parseFloat(value);\n  return typeof num !== \"number\" || Number.isNaN(num) ? 0 : num;\n}\n\nfunction toPrecision(value, precision) {\n  let nextValue = toNumber(value);\n  const scaleFactor = 10 ** (precision != null ? precision : 10);\n  nextValue = Math.round(nextValue * scaleFactor) / scaleFactor;\n  return precision ? nextValue.toFixed(precision) : nextValue.toString();\n}\n\nfunction countDecimalPlaces(value) {\n  if (!Number.isFinite(value)) return 0;\n  let e = 1;\n  let p = 0;\n\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n\n  return p;\n}\n\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\n\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\n\nfunction roundValueToStep(value, from, step) {\n  const nextValue = Math.round((value - from) / step) * step + from;\n  const precision = countDecimalPlaces(step);\n  return toPrecision(nextValue, precision);\n}\n\nfunction clampValue(value, min, max) {\n  if (value == null) return value;\n\n  if (max < min) {\n    console.warn(\"clamp: max cannot be less than min\");\n  }\n\n  return Math.min(Math.max(value, min), max);\n} // Annotate the CommonJS export names for ESM import in node:\n\n\n0 && (module.exports = {\n  clampValue,\n  countDecimalPlaces,\n  percentToValue,\n  roundValueToStep,\n  toPrecision,\n  valueToPercent\n});","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/@chakra-ui/number-utils/dist/index.js"],"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toCommonJS","mod","value","src_exports","clampValue","countDecimalPlaces","percentToValue","roundValueToStep","toPrecision","valueToPercent","module","exports","toNumber","num","parseFloat","Number","isNaN","precision","nextValue","scaleFactor","Math","round","toFixed","toString","isFinite","e","p","min","max","percent","step","console","warn"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  clampValue: () => clampValue,\n  countDecimalPlaces: () => countDecimalPlaces,\n  percentToValue: () => percentToValue,\n  roundValueToStep: () => roundValueToStep,\n  toPrecision: () => toPrecision,\n  valueToPercent: () => valueToPercent\n});\nmodule.exports = __toCommonJS(src_exports);\nfunction toNumber(value) {\n  const num = parseFloat(value);\n  return typeof num !== \"number\" || Number.isNaN(num) ? 0 : num;\n}\nfunction toPrecision(value, precision) {\n  let nextValue = toNumber(value);\n  const scaleFactor = 10 ** (precision != null ? precision : 10);\n  nextValue = Math.round(nextValue * scaleFactor) / scaleFactor;\n  return precision ? nextValue.toFixed(precision) : nextValue.toString();\n}\nfunction countDecimalPlaces(value) {\n  if (!Number.isFinite(value))\n    return 0;\n  let e = 1;\n  let p = 0;\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n  return p;\n}\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\nfunction roundValueToStep(value, from, step) {\n  const nextValue = Math.round((value - from) / step) * step + from;\n  const precision = countDecimalPlaces(step);\n  return toPrecision(nextValue, precision);\n}\nfunction clampValue(value, min, max) {\n  if (value == null)\n    return value;\n  if (max < min) {\n    console.warn(\"clamp: max cannot be less than min\");\n  }\n  return Math.min(Math.max(value, min), max);\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  clampValue,\n  countDecimalPlaces,\n  percentToValue,\n  roundValueToStep,\n  toPrecision,\n  valueToPercent\n});\n"]},"metadata":{},"sourceType":"script"}