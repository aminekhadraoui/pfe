{"ast":null,"code":"\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\n\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n\n  return to;\n};\n\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod); // src/index.ts\n\n\nvar src_exports = {};\n\n__export(src_exports, {\n  assignRef: () => assignRef,\n  mergeRefs: () => mergeRefs,\n  useMergeRefs: () => useMergeRefs\n});\n\nmodule.exports = __toCommonJS(src_exports);\n\nvar import_react = require(\"react\");\n\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\n\nfunction mergeRefs(...refs) {\n  return node => {\n    refs.forEach(ref => {\n      assignRef(ref, node);\n    });\n  };\n}\n\nfunction useMergeRefs(...refs) {\n  return (0, import_react.useMemo)(() => mergeRefs(...refs), refs);\n} // Annotate the CommonJS export names for ESM import in node:\n\n\n0 && (module.exports = {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n});","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/@chakra-ui/react-use-merge-refs/dist/index.js"],"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toCommonJS","mod","value","src_exports","assignRef","mergeRefs","useMergeRefs","module","exports","import_react","require","ref","current","error","Error","refs","node","forEach","useMemo"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  assignRef: () => assignRef,\n  mergeRefs: () => mergeRefs,\n  useMergeRefs: () => useMergeRefs\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_react = require(\"react\");\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return (0, import_react.useMemo)(() => mergeRefs(...refs), refs);\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n});\n"]},"metadata":{},"sourceType":"script"}