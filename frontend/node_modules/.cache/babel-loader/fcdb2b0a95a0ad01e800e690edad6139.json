{"ast":null,"code":"// src/index.ts\nimport { trackElementSize } from \"@zag-js/element-size\";\nimport { useEffect, useLayoutEffect, useState } from \"react\";\nvar useSafeLayoutEffect = Boolean(globalThis == null ? void 0 : globalThis.document) ? useLayoutEffect : useEffect;\n\nfunction trackMutation(el, cb) {\n  var _a, _b;\n\n  if (!el || !el.parentElement) return;\n  const win = (_b = (_a = el.ownerDocument) == null ? void 0 : _a.defaultView) != null ? _b : window;\n  const observer = new win.MutationObserver(() => {\n    cb();\n  });\n  observer.observe(el.parentElement, {\n    childList: true\n  });\n  return () => {\n    observer.disconnect();\n  };\n}\n\nfunction useSizes({\n  getNodes,\n  observeMutation = true\n}) {\n  const [sizes, setSizes] = useState([]);\n  const [count, setCount] = useState(0);\n  useSafeLayoutEffect(() => {\n    const elements = getNodes();\n    const cleanups = elements.map((element, index) => trackElementSize(element, size => {\n      setSizes(sizes2 => {\n        return [...sizes2.slice(0, index), size, ...sizes2.slice(index + 1)];\n      });\n    }));\n\n    if (observeMutation) {\n      const firstNode = elements[0];\n      cleanups.push(trackMutation(firstNode, () => {\n        setCount(count2 => count2 + 1);\n      }));\n    }\n\n    return () => {\n      cleanups.forEach(cleanup => {\n        cleanup == null ? void 0 : cleanup();\n      });\n    };\n  }, [count]);\n  return sizes;\n}\n\nfunction isRef(ref) {\n  return typeof ref === \"object\" && ref !== null && \"current\" in ref;\n}\n\nfunction useSize(subject) {\n  const [size] = useSizes({\n    observeMutation: false,\n\n    getNodes() {\n      const node = isRef(subject) ? subject.current : subject;\n      return [node];\n    }\n\n  });\n  return size;\n}\n\nexport { useSize, useSizes };","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/@chakra-ui/react-use-size/dist/index.mjs"],"names":["trackElementSize","useEffect","useLayoutEffect","useState","useSafeLayoutEffect","Boolean","globalThis","document","trackMutation","el","cb","_a","_b","parentElement","win","ownerDocument","defaultView","window","observer","MutationObserver","observe","childList","disconnect","useSizes","getNodes","observeMutation","sizes","setSizes","count","setCount","elements","cleanups","map","element","index","size","sizes2","slice","firstNode","push","count2","forEach","cleanup","isRef","ref","useSize","subject","node","current"],"mappings":"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","sourcesContent":["// src/index.ts\nimport { trackElementSize } from \"@zag-js/element-size\";\nimport { useEffect, useLayoutEffect, useState } from \"react\";\nvar useSafeLayoutEffect = Boolean(globalThis == null ? void 0 : globalThis.document) ? useLayoutEffect : useEffect;\nfunction trackMutation(el, cb) {\n  var _a, _b;\n  if (!el || !el.parentElement)\n    return;\n  const win = (_b = (_a = el.ownerDocument) == null ? void 0 : _a.defaultView) != null ? _b : window;\n  const observer = new win.MutationObserver(() => {\n    cb();\n  });\n  observer.observe(el.parentElement, { childList: true });\n  return () => {\n    observer.disconnect();\n  };\n}\nfunction useSizes({\n  getNodes,\n  observeMutation = true\n}) {\n  const [sizes, setSizes] = useState([]);\n  const [count, setCount] = useState(0);\n  useSafeLayoutEffect(() => {\n    const elements = getNodes();\n    const cleanups = elements.map(\n      (element, index) => trackElementSize(element, (size) => {\n        setSizes((sizes2) => {\n          return [\n            ...sizes2.slice(0, index),\n            size,\n            ...sizes2.slice(index + 1)\n          ];\n        });\n      })\n    );\n    if (observeMutation) {\n      const firstNode = elements[0];\n      cleanups.push(\n        trackMutation(firstNode, () => {\n          setCount((count2) => count2 + 1);\n        })\n      );\n    }\n    return () => {\n      cleanups.forEach((cleanup) => {\n        cleanup == null ? void 0 : cleanup();\n      });\n    };\n  }, [count]);\n  return sizes;\n}\nfunction isRef(ref) {\n  return typeof ref === \"object\" && ref !== null && \"current\" in ref;\n}\nfunction useSize(subject) {\n  const [size] = useSizes({\n    observeMutation: false,\n    getNodes() {\n      const node = isRef(subject) ? subject.current : subject;\n      return [node];\n    }\n  });\n  return size;\n}\nexport {\n  useSize,\n  useSizes\n};\n"]},"metadata":{},"sourceType":"module"}