{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\pfe\\\\frontend\\\\src\\\\components\\\\ChatBotSupport.js\";\nimport React, { useState } from 'react';\nimport { Button, Container, Form } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\n\nconst ChatBotSupport = () => {\n  const [inputMessage, setInputMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const handleInputChange = event => {\n    setInputMessage(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setMessages([...messages, {\n      author: 'user',\n      message: inputMessage\n    }]);\n    setInputMessage(''); // Make an API call to send the user's message to the chat bot and get the bot's response\n    // Once you get the response, add it to the messages array\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-support\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-support-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faComment,\n    className: \"chatbot-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"chatbot-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Chat with us\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-support-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, messages.map((message, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `chatbot-message ${message.author}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, message.message))), /*#__PURE__*/React.createElement(Form, {\n    className: \"chatbot-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"chatbot-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Type your message\",\n    value: inputMessage,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Send\")))));\n};\n\nexport default ChatBotSupport;","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/frontend/src/components/ChatBotSupport.js"],"names":["React","useState","Button","Container","Form","FontAwesomeIcon","faComment","ChatBotSupport","inputMessage","setInputMessage","messages","setMessages","handleInputChange","event","target","value","handleSubmit","preventDefault","author","message","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,QAAwC,iBAAxC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,SAAT,QAA0B,mCAA1B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMW,iBAAiB,GAAIC,KAAD,IAAW;AACnCJ,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACI,cAAN;AACAN,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc;AAAEQ,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,OAAO,EAAEX;AAA3B,KAAd,CAAD,CAAX;AACAC,IAAAA,eAAe,CAAC,EAAD,CAAf,CAH8B,CAI9B;AACA;AACD,GAND;;AAQA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,4BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEH,SAAvB;AAAkC,IAAA,SAAS,EAAC,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,QAAQ,CAACU,GAAT,CAAa,CAACD,OAAD,EAAUE,KAAV,kBACZ;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,SAAS,EAAG,mBAAkBF,OAAO,CAACD,MAAO,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,CAACA,OADX,CADD,CADH,CADF,eAQE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEH,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,KAAK,EAAER,YAHT;AAIE,IAAA,QAAQ,EAAEI,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eASE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CARF,CALF,CADF,CADF;AAgCD,CAhDD;;AAkDA,eAAeL,cAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ChatBotSupport = () => {\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputMessage(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setMessages([...messages, { author: 'user', message: inputMessage }]);\r\n    setInputMessage('');\r\n    // Make an API call to send the user's message to the chat bot and get the bot's response\r\n    // Once you get the response, add it to the messages array\r\n  };\r\n\r\n  return (\r\n    <Container className='d-flex justify-content-end'>\r\n      <div className='chatbot-support'>\r\n        <div className='chatbot-support-header'>\r\n          <FontAwesomeIcon icon={faComment} className='chatbot-icon' />\r\n          <span className='chatbot-title'>Chat with us</span>\r\n        </div>\r\n        <div className='chatbot-support-body'>\r\n          <div className='chatbot-messages'>\r\n            {messages.map((message, index) => (\r\n              <div key={index} className={`chatbot-message ${message.author}`}>\r\n                {message.message}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <Form className='chatbot-form' onSubmit={handleSubmit}>\r\n            <Form.Group controlId='chatbot-message'>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Type your message'\r\n                value={inputMessage}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Button variant='primary' type='submit'>\r\n              Send\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ChatBotSupport;"]},"metadata":{},"sourceType":"module"}