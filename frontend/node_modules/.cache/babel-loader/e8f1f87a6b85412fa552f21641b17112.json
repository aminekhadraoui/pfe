{"ast":null,"code":"import { mergeThemeOverride } from \"./chunk-AQYX3YP4.mjs\"; // src/theme-extensions/with-default-color-scheme.ts\n\nimport { isObject } from \"@chakra-ui/shared-utils\";\n\nfunction withDefaultColorScheme({\n  colorScheme,\n  components\n}) {\n  return theme => {\n    let names = Object.keys(theme.components || {});\n\n    if (Array.isArray(components)) {\n      names = components;\n    } else if (isObject(components)) {\n      names = Object.keys(components);\n    }\n\n    return mergeThemeOverride(theme, {\n      components: Object.fromEntries(names.map(componentName => {\n        const withColorScheme = {\n          defaultProps: {\n            colorScheme\n          }\n        };\n        return [componentName, withColorScheme];\n      }))\n    });\n  };\n}\n\nexport { withDefaultColorScheme };","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/@chakra-ui/theme-utils/dist/chunk-DFL6DXJX.mjs"],"names":["mergeThemeOverride","isObject","withDefaultColorScheme","colorScheme","components","theme","names","Object","keys","Array","isArray","fromEntries","map","componentName","withColorScheme","defaultProps"],"mappings":"AAAA,SACEA,kBADF,QAEO,sBAFP,C,CAIA;;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AACA,SAASC,sBAAT,CAAgC;AAC9BC,EAAAA,WAD8B;AAE9BC,EAAAA;AAF8B,CAAhC,EAGG;AACD,SAAQC,KAAD,IAAW;AAChB,QAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACD,UAAN,IAAoB,EAAhC,CAAZ;;AACA,QAAIK,KAAK,CAACC,OAAN,CAAcN,UAAd,CAAJ,EAA+B;AAC7BE,MAAAA,KAAK,GAAGF,UAAR;AACD,KAFD,MAEO,IAAIH,QAAQ,CAACG,UAAD,CAAZ,EAA0B;AAC/BE,MAAAA,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,UAAZ,CAAR;AACD;;AACD,WAAOJ,kBAAkB,CAACK,KAAD,EAAQ;AAC/BD,MAAAA,UAAU,EAAEG,MAAM,CAACI,WAAP,CACVL,KAAK,CAACM,GAAN,CAAWC,aAAD,IAAmB;AAC3B,cAAMC,eAAe,GAAG;AACtBC,UAAAA,YAAY,EAAE;AACZZ,YAAAA;AADY;AADQ,SAAxB;AAKA,eAAO,CAACU,aAAD,EAAgBC,eAAhB,CAAP;AACD,OAPD,CADU;AADmB,KAAR,CAAzB;AAYD,GAnBD;AAoBD;;AAED,SACEZ,sBADF","sourcesContent":["import {\n  mergeThemeOverride\n} from \"./chunk-AQYX3YP4.mjs\";\n\n// src/theme-extensions/with-default-color-scheme.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nfunction withDefaultColorScheme({\n  colorScheme,\n  components\n}) {\n  return (theme) => {\n    let names = Object.keys(theme.components || {});\n    if (Array.isArray(components)) {\n      names = components;\n    } else if (isObject(components)) {\n      names = Object.keys(components);\n    }\n    return mergeThemeOverride(theme, {\n      components: Object.fromEntries(\n        names.map((componentName) => {\n          const withColorScheme = {\n            defaultProps: {\n              colorScheme\n            }\n          };\n          return [componentName, withColorScheme];\n        })\n      )\n    });\n  };\n}\n\nexport {\n  withDefaultColorScheme\n};\n"]},"metadata":{},"sourceType":"module"}