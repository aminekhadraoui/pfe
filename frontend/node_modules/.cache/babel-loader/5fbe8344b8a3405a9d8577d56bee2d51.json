{"ast":null,"code":"// src/index.ts\nvar hasSetup = false;\nvar modality = null;\nvar hasEventBeforeFocus = false;\nvar hasBlurredWindowRecently = false;\nvar handlers = /* @__PURE__ */new Set();\n\nfunction trigger(modality2, event) {\n  handlers.forEach(handler => handler(modality2, event));\n}\n\nvar isMac = typeof window !== \"undefined\" && window.navigator != null ? /^Mac/.test(window.navigator.platform) : false;\n\nfunction isValidKey(e) {\n  return !(e.metaKey || !isMac && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n}\n\nfunction onKeyboardEvent(event) {\n  hasEventBeforeFocus = true;\n\n  if (isValidKey(event)) {\n    modality = \"keyboard\";\n    trigger(\"keyboard\", event);\n  }\n}\n\nfunction onPointerEvent(event) {\n  modality = \"pointer\";\n\n  if (event.type === \"mousedown\" || event.type === \"pointerdown\") {\n    hasEventBeforeFocus = true;\n    const target = event.composedPath ? event.composedPath()[0] : event.target;\n    let matches = false;\n\n    try {\n      matches = target.matches(\":focus-visible\");\n    } catch {}\n\n    if (matches) return;\n    trigger(\"pointer\", event);\n  }\n}\n\nfunction isVirtualClick(event) {\n  if (event.mozInputSource === 0 && event.isTrusted) return true;\n  return event.detail === 0 && !event.pointerType;\n}\n\nfunction onClickEvent(e) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    modality = \"virtual\";\n  }\n}\n\nfunction onWindowFocus(event) {\n  if (event.target === window || event.target === document) {\n    return;\n  }\n\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    modality = \"virtual\";\n    trigger(\"virtual\", event);\n  }\n\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\n\nfunction onWindowBlur() {\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\n\nfunction isFocusVisible() {\n  return modality !== \"pointer\";\n}\n\nfunction setupGlobalFocusEvents() {\n  if (typeof window === \"undefined\" || hasSetup) {\n    return;\n  }\n\n  const {\n    focus\n  } = HTMLElement.prototype;\n\n  HTMLElement.prototype.focus = function focusElement(...args) {\n    hasEventBeforeFocus = true;\n    focus.apply(this, args);\n  };\n\n  document.addEventListener(\"keydown\", onKeyboardEvent, true);\n  document.addEventListener(\"keyup\", onKeyboardEvent, true);\n  document.addEventListener(\"click\", onClickEvent, true);\n  window.addEventListener(\"focus\", onWindowFocus, true);\n  window.addEventListener(\"blur\", onWindowBlur, false);\n\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", onPointerEvent, true);\n    document.addEventListener(\"pointermove\", onPointerEvent, true);\n    document.addEventListener(\"pointerup\", onPointerEvent, true);\n  } else {\n    document.addEventListener(\"mousedown\", onPointerEvent, true);\n    document.addEventListener(\"mousemove\", onPointerEvent, true);\n    document.addEventListener(\"mouseup\", onPointerEvent, true);\n  }\n\n  hasSetup = true;\n}\n\nfunction trackFocusVisible(fn) {\n  setupGlobalFocusEvents();\n  fn(isFocusVisible());\n\n  const handler = () => fn(isFocusVisible());\n\n  handlers.add(handler);\n  return () => {\n    handlers.delete(handler);\n  };\n}\n\nfunction trackInteractionModality(fn) {\n  setupGlobalFocusEvents();\n  fn(modality);\n\n  const handler = () => fn(modality);\n\n  handlers.add(handler);\n  return () => {\n    handlers.delete(handler);\n  };\n}\n\nfunction setInteractionModality(value) {\n  modality = value;\n  trigger(value, null);\n}\n\nfunction getInteractionModality() {\n  return modality;\n}\n\nexport { getInteractionModality, setInteractionModality, trackFocusVisible, trackInteractionModality };","map":{"version":3,"sources":["C:/Users/HP/Desktop/pfe/node_modules/@zag-js/focus-visible/dist/index.mjs"],"names":["hasSetup","modality","hasEventBeforeFocus","hasBlurredWindowRecently","handlers","Set","trigger","modality2","event","forEach","handler","isMac","window","navigator","test","platform","isValidKey","e","metaKey","altKey","ctrlKey","key","onKeyboardEvent","onPointerEvent","type","target","composedPath","matches","isVirtualClick","mozInputSource","isTrusted","detail","pointerType","onClickEvent","onWindowFocus","document","onWindowBlur","isFocusVisible","setupGlobalFocusEvents","focus","HTMLElement","prototype","focusElement","args","apply","addEventListener","PointerEvent","trackFocusVisible","fn","add","delete","trackInteractionModality","setInteractionModality","value","getInteractionModality"],"mappings":"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","sourcesContent":["// src/index.ts\nvar hasSetup = false;\nvar modality = null;\nvar hasEventBeforeFocus = false;\nvar hasBlurredWindowRecently = false;\nvar handlers = /* @__PURE__ */ new Set();\nfunction trigger(modality2, event) {\n  handlers.forEach((handler) => handler(modality2, event));\n}\nvar isMac = typeof window !== \"undefined\" && window.navigator != null ? /^Mac/.test(window.navigator.platform) : false;\nfunction isValidKey(e) {\n  return !(e.metaKey || !isMac && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n}\nfunction onKeyboardEvent(event) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(event)) {\n    modality = \"keyboard\";\n    trigger(\"keyboard\", event);\n  }\n}\nfunction onPointerEvent(event) {\n  modality = \"pointer\";\n  if (event.type === \"mousedown\" || event.type === \"pointerdown\") {\n    hasEventBeforeFocus = true;\n    const target = event.composedPath ? event.composedPath()[0] : event.target;\n    let matches = false;\n    try {\n      matches = target.matches(\":focus-visible\");\n    } catch {\n    }\n    if (matches)\n      return;\n    trigger(\"pointer\", event);\n  }\n}\nfunction isVirtualClick(event) {\n  if (event.mozInputSource === 0 && event.isTrusted)\n    return true;\n  return event.detail === 0 && !event.pointerType;\n}\nfunction onClickEvent(e) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    modality = \"virtual\";\n  }\n}\nfunction onWindowFocus(event) {\n  if (event.target === window || event.target === document) {\n    return;\n  }\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    modality = \"virtual\";\n    trigger(\"virtual\", event);\n  }\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\nfunction onWindowBlur() {\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\nfunction isFocusVisible() {\n  return modality !== \"pointer\";\n}\nfunction setupGlobalFocusEvents() {\n  if (typeof window === \"undefined\" || hasSetup) {\n    return;\n  }\n  const { focus } = HTMLElement.prototype;\n  HTMLElement.prototype.focus = function focusElement(...args) {\n    hasEventBeforeFocus = true;\n    focus.apply(this, args);\n  };\n  document.addEventListener(\"keydown\", onKeyboardEvent, true);\n  document.addEventListener(\"keyup\", onKeyboardEvent, true);\n  document.addEventListener(\"click\", onClickEvent, true);\n  window.addEventListener(\"focus\", onWindowFocus, true);\n  window.addEventListener(\"blur\", onWindowBlur, false);\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", onPointerEvent, true);\n    document.addEventListener(\"pointermove\", onPointerEvent, true);\n    document.addEventListener(\"pointerup\", onPointerEvent, true);\n  } else {\n    document.addEventListener(\"mousedown\", onPointerEvent, true);\n    document.addEventListener(\"mousemove\", onPointerEvent, true);\n    document.addEventListener(\"mouseup\", onPointerEvent, true);\n  }\n  hasSetup = true;\n}\nfunction trackFocusVisible(fn) {\n  setupGlobalFocusEvents();\n  fn(isFocusVisible());\n  const handler = () => fn(isFocusVisible());\n  handlers.add(handler);\n  return () => {\n    handlers.delete(handler);\n  };\n}\nfunction trackInteractionModality(fn) {\n  setupGlobalFocusEvents();\n  fn(modality);\n  const handler = () => fn(modality);\n  handlers.add(handler);\n  return () => {\n    handlers.delete(handler);\n  };\n}\nfunction setInteractionModality(value) {\n  modality = value;\n  trigger(value, null);\n}\nfunction getInteractionModality() {\n  return modality;\n}\nexport {\n  getInteractionModality,\n  setInteractionModality,\n  trackFocusVisible,\n  trackInteractionModality\n};\n"]},"metadata":{},"sourceType":"module"}